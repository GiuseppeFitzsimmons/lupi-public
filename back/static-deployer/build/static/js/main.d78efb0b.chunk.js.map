{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","app/LupiMenu.js","app/components/GenericListView.js","app/components/BrandView.js","app/components/BrandSelector.js","app/screens/Login.js","app/components/LupiAppBar.js","app/screens/About.js","app/components/UserView.js","app/screens/Register.js","app/screens/Brands.js","app/components/CollectionView.js","app/components/CurrentBrandHeader.js","app/screens/Collections.js","app/components/ProductView.js","app/screens/Products.js","app/components/FabricView.js","app/screens/Fabrics.js","app/components/BrandUserView.js","app/screens/Users.js","app/components/FournitureView.js","app/screens/Fournitures.js","App.js","app/messages.js","serviceWorker.js","index.js","features/brandSlice.js","features/serverCalls.js","features/globalSlice.js","features/collectionSlice.js","features/userSlice.js","features/environment.js","features/loginSlice.js","app/utility/token-utility.js","features/productSlice.js","features/fabricSlice.js","features/fournitureSlice.js","app/assets/default-avatar.png"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","global","globalSlice","counter","counterReducer","brand","brandSlice","collection","collectionReducer","product","productSlice","login","loginReducer","fabric","fabricSlice","user","userSlice","fourniture","fournitureSlice","LupiMenu","image","rtl","toggled","handleToggleSidebar","setDisplayMode","console","log","intl","useIntl","dispatch","useDispatch","history","useHistory","handleCollapsedChange","setCollapsed","collapsed","useState","fabrics","useSelector","tokens","currentBrandId","localStorage","getItem","theBrand","brands","find","b","id","users","collections","products","fournitures","handleFabricOpenChange","open","handleFournitureOpenChange","brandId","location","useLocation","breakPoint","onToggle","style","marginRight","textAlign","onClick","iconShape","title","to","formatMessage","icon","onOpenChange","active","pathname","indexOf","LinearProgress","map","collectionName","collectionId","replace","productName","fabricName","createFabricAsync","Array","isArray","fournitureName","createFournitureAsync","className","padding","cursor","push","src","height","background","brandName","useStyles","makeStyles","root","maxWidth","minWidth","maxHeight","media","margin","GenericListView","props","classes","Card","width","colour","CardActionArea","CardMedia","CardContent","Typography","variant","color","component","description","children","placeHolderImage","fontSize","position","backdrop","zIndex","top","left","nextImageButton","bottom","nextButton","right","backButton","saveButton","BrandView","setBrandName","siret","setSiret","addressLine1","setAddressLine1","addressLine2","setAddressLine2","postalCode","setPostalCode","clientPaymentConditions","setClientPaymentConditions","operatingCurrency","setOperatingCurrency","roundingRules","setRoundingRules","useFileUpload","selectFile","errors","error","setError","loading","handleSave","length","imageValue","undefined","saveAsync","useEffect","editing","showEditorDialogue","editorDialogue","mode","setMode","canEdit","allowedScope","isDirty","setDirty","dirty","detailedView","m","Backdrop","CircularProgress","source","accept","TextField","autoFocus","disabled","label","type","helperText","fullWidth","onChange","e","target","select","MenuItem","CardActions","Button","size","cancel","wizardInstance","setWizardInstance","stepStyle","wizardView","Grid","container","overflow","initialStep","instance","item","direction","justify","nextStep","previousStep","displayMode","Dialog","onClose","theme","flexGrow","overflowX","overlfowY","paper","spacing","palette","text","secondary","dispatched","BrandSelector","loadBrandsAsync","path","substr","lastIndexOf","setBrandCurrent","Login","shown","setOpen","password","setPassword","setId","_errors","fields","emailError","passwordError","message","goToRegister","useCallback","handleLogin","loginAsync","getState","tokenBrands","roles","handleShowBrandSelector","createBrand","disableBackdropClick","disableEscapeKeyDown","DialogContent","DialogActions","grow","menuButton","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","LupiAppBar","React","anchorProfileElement","setAnchorProfileElement","handleCloseProfileMenu","AppBar","margins","Toolbar","minHeight","InputBase","placeholder","input","inputProps","IconButton","edge","event","currentTarget","Menu","anchorEl","keepMounted","Boolean","logout","switchBrand","About","handleGoToRegister","loggedIn","UserView","email","handleCancel","file","require","setPasswordVerify","firstName","setFirstName","lastName","setLastName","process","registerAsync","Register","Brands","CollectionView","setCollectionName","deliveryDate","setDeliveryDate","markup","setMarkup","InputLabelProps","shrink","cancelCreateCollection","saveCollectionAsync","summaryView","overflowY","CurrentBrandHeader","marginBottom","Collections","loadCollectionsAsync","createCollectionAsync","ProductView","setProductName","saveProductAsync","cancelCreateProduct","Products","loadProductsAsync","collectionObject","i","createProductAsync","FabricView","setFabricName","Fabrics","loadFabricsAsync","createFabric","BrandUserView","cancelCreateUser","setBrand","setEmail","newUser","brandUserAsync","deleteUserRole","Users","loadUsersAsync","brandObject","createUserAsync","FournitureView","setFournitureName","Fournitures","loadFournituresAsync","createFourniture","App","result","JSON","parse","messages","en","sidebarTitle","emailAddress","passwordAgain","forgottenPassword","createCollection","createAccount","register","dashboard","components","dropdown","submenu","multiLevel","new","withPrefix","withSuffix","logOut","profile","edit","save","delete","selectImageBrandWizard","selectNameBrandWizard","addUser","window","hostname","match","ReactDOM","render","StrictMode","rel","href","locale","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","env","addImageServer","environment","getEnvironment","origin","imageServer","newBrand","uuidv4","currency","createAsync","postToServer","resource","params","getFromServer","currentBrand","setItem","toCancel","filter","method","setCurrentBrand","removeItem","meta","arg","responseCode","forEach","restfulResources","token","signedurl","branduser","role","getStore","obj","catch","err","getTokensFromStorage","getAccessToken","accessToken","putTokensInStorage","stringify","questObject","restfulResource","isFormData","_name","param","signedUrlQuestObject","fileName","signedUrl","uploadParameters","headers","contentType","body","reject","fetch","url","key","update","_headers","Authorization","Accept","requestParameters","credentials","json","reply","code","retry","refreshToken","_url","keys","Object","j","requestOptons","_refreshToken","refresh","siblingId","collectionSlice","c","saveUserAsync","tempUsers","createUser","toDelete","userId","u","p","module","exports","server","googleLogin","devServer","local","toLowerCase","this","actionQueue","grant_type","loginSlice","access_token","refresh_token","atob","split","saveBrand","clear","allowedScopes","getScopesForBrand","disallowedScope","assign","scope","allowed","scopes","requestedScopeSplit","requestedObject","requestedAction","thisScopeSplit","thisObject","thisAction","productId","createProduct","fabricId","newArray","concat","f","fournitureId"],"mappings":"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","file":"static/js/main.d78efb0b.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport collectionReducer from '../features/collectionSlice';\nimport loginReducer from '../features/loginSlice';\nimport globalSlice from '../features/globalSlice';\nimport productSlice from '../features/productSlice';\nimport fabricSlice from '../features/fabricSlice';\nimport fournitureSlice from '../features/fournitureSlice';\nimport userSlice from '../features/userSlice';\nimport brandSlice from '../features/brandSlice';\n\nexport const store = configureStore({\n  reducer: {\n    global: globalSlice,\n    counter: counterReducer,\n    brand: brandSlice,\n    collection: collectionReducer,\n    product: productSlice,\n    login: loginReducer,\n    fabric: fabricSlice,\n    user: userSlice,\n    fourniture: fournitureSlice\n  }\n});\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport {\n  ProSidebar,\n  Menu,\n  MenuItem,\n  SubMenu,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n} from 'react-pro-sidebar';\nimport { FaTachometerAlt, FaGem, FaList, FaGithub, \n  FaRegLaughWink, FaHeart, FaAngleDoubleLeft, \n  FaAngleDoubleRight,\n  FaBootstrap } from 'react-icons/fa';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  createBrand,\n  loadBrandsAsync\n  } from '../features/brandSlice';\nimport {\n  createCollection,\n  createCollectionAsync,\n  loadCollectionsAsync\n} from '../features/collectionSlice';\nimport {\n  createProduct,\n  createProductAsync,\n  loadProductsAsync\n} from '../features/productSlice';\nimport {\n  createFabric,\n  createFabricAsync,\n  loadFabricsAsync\n} from '../features/fabricSlice';\nimport {\n  createFourniture,\n  createFournitureAsync,\n  loadFournituresAsync\n} from '../features/fournitureSlice';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { createUser, createUserAsync, loadUsersAsync } from '../features/userSlice';\nimport Button from '@material-ui/core/Button';\n\n\n//Many cool customisation features here: //https://reactjsexample.com/customizable-and-responsive-react-sidebar-library-with-dropdown-menus/\nconst LupiMenu = ({ image, rtl, toggled, handleToggleSidebar, setDisplayMode }) => {\n  console.log('menurender')\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleCollapsedChange=()=>{\n    setCollapsed(!collapsed)\n  }\n  const handleCreateFabric = ()=> {\n    if (fabrics) {\n      //Wait until fabrics, if any, have loaded.\n      dispatch(createFabricAsync());\n    }\n  }\n  const handleCreateUser = (brandId)=> {\n    if (users) {\n      console.log('handleCreateUser', brandId)\n      //Wait until users, if any, have loaded.\n      dispatch(createUserAsync(brandId));\n    }\n  }\n  const handleCreateCollection = (brandId) => {\n    dispatch(createCollectionAsync({brandId}))\n  }\n  const handleCreateProduct = (collectionId) => {\n    dispatch(createProductAsync({collectionId}))\n  }\n  const handleCreateFourniture = (brandId) => {\n    dispatch(createFournitureAsync({brandId}))\n  }\n  const [collapsed, setCollapsed]=useState(false);\n  const tokens = useSelector(state=>{\n    return state?.login?.tokens\n  })\n  const fabrics=useSelector(state => {\n    return state?.fabric?.fabrics\n  })\n  const currentBrandId = localStorage.getItem('currentBrand');\n  const theBrand = useSelector(state=>{\n    if (currentBrandId) {\n        return state?.brand?.brands?.find(b=>b?.id===currentBrandId)\n    }\n  });\n  if (!theBrand && tokens) {\n      //dispatch(loadBrandsAsync());\n  }\n  const users=useSelector(state => {\n    if (currentBrandId && state?.user?.users[currentBrandId]){\n      return state?.user?.users[currentBrandId]\n    } else return null\n  })\n  const collections=useSelector(state => {\n    return state?.collection?.collections\n  })\n  const products=useSelector(state=>{\n    return state?.product?.products\n  })\n  const fournitures=useSelector(state=>{\n    return state?.fourniture?.fournitures\n  })\n  if (!fabrics && tokens){\n    //dispatch(loadFabricsAsync());\n  }\n  const handleFabricOpenChange = open => {\n    if (open && !fabrics) {\n      //dispatch(loadBrandsAsync());\n    }\n  }\n  const handleBrandOpenChange = brandId => {\n    if ((!collections || !collections[brandId])&&tokens) {\n      //dispatch(loadCollectionsAsync({brandId}));\n    }\n  }\n  const handleCollectionOpenChange = collectionId => {\n    if ((!products || !products[collectionId])&&tokens) {\n      //dispatch(loadProductsAsync({collectionId}));\n    }\n  }\n  const handleUserOpenChange = brandId => {\n    if ((!users || !users[brandId])&&tokens) {\n      //dispatch(loadUsersAsync({brandId}));\n    }\n  }\n  const handleFournitureOpenChange = brandId => {\n    if ((!fournitures || !fournitures[brandId])&&tokens) {\n      //dispatch(loadUsersAsync({brandId}));\n    }\n  }\n  let location = useLocation();\n\n  const collectionsMenu = () => {\n    if (currentBrandId) {\n      return (\n      <SubMenu key={currentBrandId} title={\n        <Link to={'/collections/'+currentBrandId}>{intl.formatMessage({ id: 'collections' })}</Link>} \n        icon={<FaList />}\n        onOpenChange={()=>handleBrandOpenChange(currentBrandId)}\n        active={location.pathname.indexOf(currentBrandId)>-1}>\n\n        {(!collections || !collections[currentBrandId]) &&\n          <MenuItem><LinearProgress /></MenuItem>\n        }\n        {(collections && collections[currentBrandId]) &&\n          collections[currentBrandId].map(collection=>{\n            //console.log('mapped collection', collection)\n            return(\n              <SubMenu key={collection.id} title={\n                <Link to={'/products/'+currentBrandId+'/products/'+collection.id}>{collection.collectionName}</Link>}\n                icon={<FaList/>}\n                onOpenChange={()=>{handleCollectionOpenChange(collection.id)}}\n                active={location.pathname.indexOf(collection.id)>-1}\n              >\n                {(!products || !products[collection.id]) &&\n                <MenuItem><LinearProgress/></MenuItem>\n                }\n                {(products && products[collection.id])&&\n                  products[collection.id].map(product=>{\n                    return(\n                      <MenuItem key={product.id}>\n                        <Link to={'/products/'+currentBrandId+'/products/'+collection.id} replace/>\n                          {product.productName}\n                      </MenuItem>\n                    )\n                  })\n                }\n                {/*<MenuItem\n                onClick={()=>{\n                  setDisplayMode('detail')\n                  handleCreateProduct(collection.id)\n                }}\n                >\n                  {intl.formatMessage({id:'createProduct'})}<Link to={'/products/'+collection.id} />\n              </MenuItem>*/}\n              </SubMenu>\n            )\n          })\n        }\n        {/*<MenuItem onClick={()=>{\n          setDisplayMode('detail');\n          handleCreateCollection(currentBrandId)\n          }}>\n          {intl.formatMessage({ id: 'createCollection' })}<Link to={'/collections/'+currentBrandId} />\n        </MenuItem>*/}\n      </SubMenu>\n      )\n    } else {\n      return <></>\n    }\n  }\n  const fabricsMenu = () => {\n    if (currentBrandId) {\n      return (\n        <SubMenu title={\n          <Link to={'/fabrics/'+currentBrandId}>{intl.formatMessage({ id: 'fabrics' })}</Link>} icon={<FaList />}\n          onOpenChange={handleFabricOpenChange}>\n          {fabrics && fabrics.map( fabric => {\n              return (\n                  <SubMenu key={fabric.id} title={\n                    <Link to={'/fabrics/'+fabric.id}>{fabric.fabricName}</Link>} \n                    icon={<FaList />}\n                    onOpenChange={()=>handleFabricOpenChange(fabric.id)}\n                    active={location.pathname.indexOf(fabric.id)>-1}>\n                  </SubMenu>\n              )\n          })}\n          {!fabrics &&\n            <MenuItem><LinearProgress /></MenuItem>\n          }\n          <MenuItem onClick={()=>{\n            setDisplayMode('list');\n            handleCreateFabric();\n            }}>\n            {intl.formatMessage({ id: 'createFabric' })}<Link to=\"/fabrics\" />\n          </MenuItem>\n        </SubMenu>\n      )\n    } else {\n      return <></>\n    }\n  }\n  const fournituresMenu = () => {\n    if (currentBrandId) {\n      return (\n        <SubMenu title={\n          <Link to={'/fournitures/'+currentBrandId}>{intl.formatMessage({ id: 'fournitures' })}</Link>} icon={<FaList />}\n          onOpenChange={handleFournitureOpenChange}>\n          {fournitures && Array.isArray(fournitures) && fournitures.map( fourniture => {\n              return (\n                  <SubMenu key={fourniture.id} title={\n                    <Link to={'/fournitures/'+fourniture.id}>{fourniture.fournitureName}</Link>} \n                    icon={<FaList />}\n                    onOpenChange={()=>handleFournitureOpenChange(fourniture.id)}\n                    active={location.pathname.indexOf(fourniture.id)>-1}>\n                  </SubMenu>\n              )\n          })}\n          {!fournitures &&\n            <MenuItem><LinearProgress /></MenuItem>\n          }\n          <MenuItem onClick={()=>{\n            setDisplayMode('list');\n            handleCreateFourniture();\n            }}>\n            {intl.formatMessage({ id: 'createFourniture' })}<Link to=\"/fournitures\" />\n          </MenuItem>\n        </SubMenu>\n      )\n    } else {\n      return <></>\n    }\n  }\n  const usersMenu = () => {\n    if (currentBrandId) {\n      return (\n//<Link to={'/collections/'+currentBrandId+'/products/'+collection.id}>{collection.collectionName}</Link>\n        <SubMenu title={\n          <Link to={'/users/'+currentBrandId}>{intl.formatMessage({ id: 'users' })}</Link>} icon={<FaList />}\n        >\n          {users && users.map( user => {\n            console.log('lupimenu user', user)\n              return (\n                  <SubMenu key={user?.user?.id} title={\n                    <Link to={'/users/'+currentBrandId}>{user?.user?.id}</Link>} \n                    icon={<FaList />}\n                    onOpenChange={()=>handleUserOpenChange(currentBrandId)}\n                    active={location.pathname.indexOf(currentBrandId)>-1}>\n                  </SubMenu>\n              )\n          })}\n          {!users &&\n            <MenuItem><LinearProgress /></MenuItem>\n          }\n        </SubMenu>\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  /* \n          <MenuItem onClick={()=>{\n            setDisplayMode('list');\n            handleCreateUser({brandId:currentBrandId});\n            }}>\n            {intl.formatMessage({ id: 'addUser' })}<Link to={'/users/'+currentBrandId} />\n          </MenuItem>\n   */\n\n  return (\n    <ProSidebar\n      collapsed={collapsed}\n      toggled={toggled}\n      breakPoint=\"md\"\n      onToggle={handleToggleSidebar}\n      style={{marginRight:'0x'}}\n    >\n      \n      <SidebarHeader  style={{textAlign:'right'}}>\n        {collapsed ? \n          <FaAngleDoubleRight onClick={handleCollapsedChange}/>\n          :\n          <FaAngleDoubleLeft onClick={handleCollapsedChange}/>\n        }\n      </SidebarHeader>\n\n      <SidebarContent>\n        <Menu iconShape=\"circle\">\n          {collectionsMenu()}\n          {fabricsMenu()}\n          {usersMenu()}\n          {fournituresMenu()}\n        </Menu>\n      </SidebarContent>\n\n      <SidebarFooter style={{ textAlign: 'center' }}>\n      <div\n          className=\"sidebar-btn-wrapper\"\n          style={{\n            padding: '20px 24px',\n            cursor: 'pointer'\n          }}\n          onClick={()=>{\n            history.push('/brands/'+theBrand.id);\n            //TODO: This is where we need to be setting the current brand from the menu\n            //localStorage.setItem('currentBrand', theBrand)\n          }}\n        >\n        {theBrand && theBrand.image &&\n          <img src={theBrand.image} style={{height:'14px', background:'white', marginRight:'2px'}}/>\n        }\n        {theBrand ? theBrand.brandName : ''}\n        </div>\n      </SidebarFooter>\n    </ProSidebar>\n  );\n};\n\nexport default LupiMenu;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 185,\n    minWidth: 185,\n    maxHeight: 105\n  },\n  media: {\n    height: 60,\n    margin: 0\n  },\n});\n\nexport default function GenericListView(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} >\n      <div style={{width:'100%',height:'1vh', background:props.colour?props.colour:'black'}}/>\n      <CardActionArea>\n        <CardMedia \n          onClick={props.onClick}\n          className={classes.media}\n          image={props.image}\n        />\n        <CardContent style={{padding:4}}>\n          <Typography variant=\"h6\" onClick={props.onClick}>\n            {props.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n         {props.children}\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload, FaWindowClose, FaExpandAlt, FaEdit, FaLock, FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport {\n    cancel, saveAsync\n} from '../../features/brandSlice'\nimport { MenuItem } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GenericListView from './GenericListView';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useHistory } from 'react-router-dom';\nimport { allowedScope } from '../utility/token-utility';\nimport BrandWizard from \"../components/BrandWizard\";\nimport StepWizard from \"react-step-wizard\";\nimport Grid from '@material-ui/core/Grid';\nimport { local } from '../../features/environment';\nconst placeHolderImage = \"/default-avatar.png\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 245,\n        margin: 6,\n        fontSize: '1em',\n        position: 'relative'\n    },\n    media: {\n        height: 120,\n    },\n    backdrop: {\n        zIndex: 99,\n        color: '#fff',\n        width: '100%',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%'\n    },\n    nextImageButton: {\n        position: \"relative\",\n        left:'92%',\n        bottom:'2%'\n    },\n    nextButton: {\n        position: \"relative\",\n        right:'-1260%',\n        bottom:'2%',\n        //top: '48vh'\n    },\n    backButton: {\n        position: \"relative\",\n        left:'10%',\n        bottom:'2%'\n    },\n    saveButton:{\n        position:\"relative\",\n        left:'23vw'\n    }\n});\n\nexport default function BrandView(props) {\n    const classes = useStyles();\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const [brandName, setBrandName] = useState(props.brand.brandName);\n    const [siret, setSiret] = useState(props.brand.siret);\n    const [addressLine1, setAddressLine1] = useState(props.brand.addressLine1);\n    const [addressLine2, setAddressLine2] = useState(props.brand.addressLine2);\n    const [postalCode, setPostalCode] = useState(props.brand.postalCode);\n    const [clientPaymentConditions, setClientPaymentConditions] = useState(props.brand.clientPaymentConditions);\n    const [operatingCurrency, setOperatingCurrency] = useState(props.brand.operatingCurrency);\n    const [roundingRules, setRoundingRules] = useState(props.brand.roundingRules);\n    const [image, selectFile] = useFileUpload()\n    const errors = useSelector(state => {\n        if (state?.brand?.error) {\n            return state.brand.error;\n        } else {\n            return {}\n        }\n    })\n    const [error, setError] = useState(errors)\n    const loading = useSelector(state => {\n        if (state.brand.status.id === props.brand.id) {\n            return state.brand.status.status === 'loading'\n        }\n    })\n    const defaultSrc = process.env.PUBLIC_URL + \"public/default-avatar.png\";\n    const handleSave = () => {\n        if (!brandName || brandName.length<1 || brandName.length>256) {\n            setError({brandName:'Name cannot be blank'});\n        } else {\n            let imageValue = image ? image : props.brand.image ? props.brand.image : undefined\n            console.log('imageValue', imageValue)\n            dispatch(saveAsync({ id: props.brand.id, brandName, siret, addressLine1, addressLine2, postalCode, clientPaymentConditions, operatingCurrency, roundingRules, image:imageValue }))\n        }\n    }\n    useEffect(()=>{\n        console.log('loading', loading, 'props.brand.editing', props.brand.editing)\n        if (!loading&&!props.brand.editing){\n            showEditorDialogue(false)\n        }\n    }, [loading])\n    const handleCancel = () => {\n        dispatch(cancel({ id: props.brand.id }));\n    }\n    const [editorDialogue, showEditorDialogue] = useState(props.brand && props.brand.editing);\n    const history = useHistory();\n    const [mode, setMode] = useState(props.brand.brandName ? 'DISPLAY':'EDIT');\n    const canEdit=allowedScope(props.brand.id, 'brand:edit');\n    const [isDirty, setDirty] = useState(false);\n    useEffect(()=>{\n        let dirty=brandName!==props.brand.brandName ||\n            siret!==props.brand.siret ||\n            addressLine1!==props.brand.addressLine1 ||\n            addressLine2!==props.brand.addressLine2 ||\n            postalCode!==props.brand.postalCode ||\n            clientPaymentConditions!==props.brand.clientPaymentConditions ||\n            operatingCurrency!==props.brand.operatingCurrency ||\n            roundingRules!==props.brand.roundingRules ||\n            image!==props.brand.image;\n        setDirty(dirty);\n    })\n\n    console.log('brandName', brandName)\n\n    const detailedView = \n    <Card className={classes.root} m={18}>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <CardActionArea>\n            <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.brand.image ? props.brand.image : placeHolderImage}\n            >\n                {mode === 'EDIT' &&\n                    <FaFileUpload\n                        onClick={() => {\n                            // Single File Upload\n                            selectFile({ accept: 'image/*' })\n                        }}\n                        style={{ position: 'absolute', right: '0px', top: '0', fontSize: '2em', color: 'rgba(0,0,0,0.5)' }} />\n                }\n            </CardMedia>\n            <CardContent>\n                <TextField\n                    value={brandName}\n                    autoFocus\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"brandName\"\n                    label={intl.formatMessage({ id: 'brandName' })}\n                    type=\"text\"\n                    error={error.brandName}\n                    helperText={error.brandName}\n                    fullWidth\n                    onChange={(e) => setBrandName(e.target.value)}\n                />\n                <TextField\n                    value={siret}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"siret\"\n                    label={intl.formatMessage({ id: 'siret' })}\n                    type=\"text\"\n                    error={error.siret}\n                    helperText={error.siret}\n                    fullWidth\n                    onChange={(e) => setSiret(e.target.value)}\n                />\n                <TextField\n                    value={addressLine1}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    margin=\"addressLine1\"\n                    id=\"addressLine1\"\n                    label={intl.formatMessage({ id: 'addressLine1' })}\n                    type=\"text\"\n                    error={error.addressLine1}\n                    helperText={error.addressLine1}\n                    fullWidth\n                    onChange={(e) => setAddressLine1(e.target.value)}\n                />\n                <TextField\n                    value={addressLine2}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"addressLine2\"\n                    label={intl.formatMessage({ id: 'addressLine2' })}\n                    type=\"text\"\n                    error={error.addressLine2}\n                    helperText={error.addressLine2}\n                    fullWidth\n                    onChange={(e) => setAddressLine2(e.target.value)}\n                />\n                <TextField\n                    value={postalCode}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"postalCode\"\n                    label={intl.formatMessage({ id: 'postalCode' })}\n                    type=\"text\"\n                    error={error.postalCode}\n                    helperText={error.postalCode}\n                    fullWidth\n                    onChange={(e) => setPostalCode(e.target.value)}\n                />\n                <TextField\n                    value={clientPaymentConditions}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"clientPaymentConditions\"\n                    label={intl.formatMessage({ id: 'clientPaymentConditions' })}\n                    type=\"text\"\n                    error={error.clientPaymentConditions}\n                    helperText={error.clientPaymentConditions}\n                    fullWidth\n                    onChange={(e) => setClientPaymentConditions(e.target.value)}\n                />\n                <TextField id=\"operatingCurrency\"\n                    value={operatingCurrency}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    label={intl.formatMessage({ id: 'operatingCurrency' })}\n                    onChange={(e) => setOperatingCurrency(e.target.value)}\n                    error={error.operatingCurrency}\n                    helperText={error.operatingCurrency}\n                    select>\n                    <MenuItem value=\"EU\">EU</MenuItem>\n                    <MenuItem value=\"USD\">USD</MenuItem>\n                    <MenuItem value=\"UKP\">UKP</MenuItem>\n                </TextField>\n                <TextField\n                    value={roundingRules}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"roundingRules\"\n                    label={intl.formatMessage({ id: 'roundingRules' })}\n                    type=\"text\"\n                    error={error.roundingRules}\n                    helperText={error.roundingRules}\n                    fullWidth\n                    onChange={(e) => setRoundingRules(e.target.value)}\n                />\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {mode === 'EDIT' &&\n                <FaLock color=\"primary\"\n                    onClick={()=>setMode('DETAIL')}>\n                </FaLock>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    onClick={handleCancel}>\n                    {intl.formatMessage({ id: 'delete' })}\n                </Button>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button>\n            }\n            {isDirty}\n            {mode !== 'EDIT' && canEdit &&\n                    <div >\n                <FaEdit color=\"primary\"\n                    onClick={()=>setMode('EDIT')}>\n                </FaEdit>\n                </div>\n            }\n        </CardActions>\n    </Card>\n    const [wizardInstance, setWizardInstance] = useState();\n    const stepStyle={width: '30vw', height:'50vh'}\n    const wizardView = \n    <Grid container style={{width: '30vw', height:'60vh', overflow:'hidden'}}>\n        <StepWizard initialStep={1} instance={setWizardInstance}>\n            <div style={stepStyle}>\n            <Grid item container direction=\"column\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectImageBrandWizard' })}\n                </Typography>\n                <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.brand.image ? props.brand.image : placeHolderImage}\n                onClick={() => {\n                    // Single File Upload\n                    selectFile({ accept: 'image/*' })\n                }}\n                style={stepStyle}\n            />\n            </Grid>\n            <Grid item container direction=\"column\" justify=\"space-between\" className={classes.nextImageButton}>\n                <p><button onClick={()=>wizardInstance.nextStep()}><FaArrowRight/></button></p>\n            </Grid>\n            </div>\n            \n            <div style={stepStyle}>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectNameBrandWizard' })}\n                </Typography>\n                <TextField\n                    value={brandName}\n                    autoFocus\n                    margin=\"none\"\n                    id=\"brandName\"\n                    label={intl.formatMessage({ id: 'brandName' })}\n                    type=\"text\"\n                    error={error.brandName}\n                    helperText={error.brandName}\n                    fullWidth\n                    onChange={(e) => setBrandName(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button disabled={!brandName} onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n\n                </Grid>\n            </div>\n            <div>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <TextField\n                    value={siret}\n                    margin=\"none\"\n                    id=\"siret\"\n                    label={intl.formatMessage({ id: 'siret' })}\n                    type=\"text\"\n                    error={error.siret}\n                    helperText={error.siret}\n                    fullWidth\n                    onChange={(e) => setSiret(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n            </Grid>\n            </div>\n            <div>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <TextField\n                    value={addressLine1}\n                    margin=\"none\"\n                    margin=\"addressLine1\"\n                    id=\"addressLine1\"\n                    label={intl.formatMessage({ id: 'addressLine1' })}\n                    type=\"text\"\n                    error={error.addressLine1}\n                    helperText={error.addressLine1}\n                    fullWidth\n                    onChange={(e) => setAddressLine1(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n            </Grid>\n            </div>\n            <div>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <TextField\n                    value={addressLine2}\n                    margin=\"none\"\n                    id=\"addressLine2\"\n                    label={intl.formatMessage({ id: 'addressLine2' })}\n                    type=\"text\"\n                    error={error.addressLine2}\n                    helperText={error.addressLine2}\n                    fullWidth\n                    onChange={(e) => setAddressLine2(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n            </Grid>\n            </div>\n            <div>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <TextField\n                    value={postalCode}\n                    margin=\"none\"\n                    id=\"postalCode\"\n                    label={intl.formatMessage({ id: 'postalCode' })}\n                    type=\"text\"\n                    error={error.postalCode}\n                    helperText={error.postalCode}\n                    fullWidth\n                    onChange={(e) => setPostalCode(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n            </Grid>\n            </div>\n            <div>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <TextField\n                    value={clientPaymentConditions}\n                    margin=\"none\"\n                    id=\"clientPaymentConditions\"\n                    label={intl.formatMessage({ id: 'clientPaymentConditions' })}\n                    type=\"text\"\n                    error={error.clientPaymentConditions}\n                    helperText={error.clientPaymentConditions}\n                    fullWidth\n                    onChange={(e) => setClientPaymentConditions(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n            </Grid>\n            </div>\n            <div>\n                <TextField id=\"operatingCurrency\"\n                    value={operatingCurrency}\n                    margin=\"none\"\n                    label={intl.formatMessage({ id: 'operatingCurrency' })}\n                    onChange={(e) => setOperatingCurrency(e.target.value)}\n                    error={error.operatingCurrency}\n                    helperText={error.operatingCurrency}\n                    select>\n                    <MenuItem value=\"EU\">EU</MenuItem>\n                    <MenuItem value=\"USD\">USD</MenuItem>\n                    <MenuItem value=\"UKP\">UKP</MenuItem>\n                </TextField>\n                <Grid container>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n                </Grid>\n            </div>\n            <div>\n                <TextField\n                    value={roundingRules}\n                    margin=\"none\"\n                    id=\"roundingRules\"\n                    label={intl.formatMessage({ id: 'roundingRules' })}\n                    type=\"text\"\n                    error={error.roundingRules}\n                    helperText={error.roundingRules}\n                    fullWidth\n                    onChange={(e) => setRoundingRules(e.target.value)}\n                />\n                <Grid container>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                <p><Button size=\"small\" color=\"primary\"\n                className={classes.saveButton}\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button></p>\n                </Grid>\n                </Grid>\n                <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n            </div>\n        </StepWizard>\n        </Grid>\n    if (props.displayMode === 'detail') {\n        return (\n            detailedView\n        );\n    } else {\n        return (\n            <>\n                <GenericListView\n                    image={image && image.source ? image.source : props.brand.image ? props.brand.image : placeHolderImage}\n                    title={brandName}\n                    onClick={()=>{\n                        history.push('/collections/'+props.brand.id)\n                    }}\n                    >\n                    <div style={{position:'absolute',left:'2px', top:'2px'}}>\n                    <FaExpandAlt color=\"primary\"\n                        onClick={() => {\n                            showEditorDialogue(true)\n                        }}>\n                    </FaExpandAlt>\n                    </div>\n                </GenericListView>\n                <Dialog onClose={() => showEditorDialogue(false)} open={editorDialogue}>\n                    <Grid>\n                    <FaWindowClose onClick={() => {showEditorDialogue(false)}} style={{ position: 'absolute', zIndex: 99 }} />\n                    {wizardView}\n                    </Grid>\n                </Dialog>\n            </>\n        )\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport BrandView from '../components/BrandView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid, LinearProgress } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport {\n  setBrandCurrent,\n  loadBrandsAsync\n  } from '../../features/brandSlice'\nimport GenericListView from '../components/GenericListView';\nimport { useHistory } from 'react-router-dom';\nconst placeHolderImage = \"/default-avatar.png\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding:'16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n//Sort of a workaround - if it's already been dispatched, don't dispatch it again.\nvar dispatched=false;\n\nexport default function BrandSelector(props) {\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const brands = useSelector(state => {console.log('brandselector',state);return state?.brand?.brands});\n  console.log('brandLogger', dispatched, brands)\n  //const newBrands = useEffect(()=>dispatch(loadBrandsAsync()),[brands])\n  if (!brands && !dispatched) {\n    dispatched=true;\n    console.log('brandselector dispatch loadBrandsAsync')\n    dispatch(loadBrandsAsync());\n  }\n  const mode = 'EDIT';//TODO user has the right to edit\n  let location = useLocation();\n  const path = location.pathname;\n  let brandId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  if (brandId === 'brands') {\n    brandId = false;\n  }\n  const intl = useIntl();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3} style={{height:'95vh'}}>\n        {!brands &&\n        <LinearProgress/>\n        }\n        {brands && brands.map(brand => {\n            return (\n                <button\n                key={brand.id}\n                onClick={()=>{\n                    history.push('/collections/'+brand.id)\n                    dispatch(setBrandCurrent(brand))\n                }}\n                >\n                {brand.brandName}\n              </button>\n            )\n        })}\n        {(!brands && brands?.length===0) && \n          <>NO BRANDS</>\n        }\n      </Grid>\n    </div>\n  );\n}","import React, {useCallback, useState, getState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  useHistory\n} from \"react-router-dom\";\nimport {\n  loginAsync\n  } from '../../features/loginSlice'\nimport BrandSelector from '../components/BrandSelector';\nimport StepWizard from \"react-step-wizard\";\nimport {\n  setBrandCurrent,\n  createBrand\n} from '../../features/brandSlice';\n\nexport default function Login(props) {\n  const [wizardInstance, setWizardInstance] = useState();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const [open, setOpen] = useState(props.shown);\n  useEffect(() => {\n    //setOpen(props.shown)\n    console.log('open', open)\n    })\n  let emailError, passwordError, isEmailError, isPasswordError;\n  const history = useHistory();\n  const [password, setPassword] = useState();\n  const [id, setId] = useState();\n  const errors=useSelector(state => {\n    let _errors={};\n    if (state && state.login && state.login.error \n      && state.login.error.fields) {\n        _errors.emailError = state.login.error.fields.id;\n        _errors.passwordError = state.login.error.fields.password;\n    } else if (state && state.login && state.login.error) {\n      _errors.emailError = state?.login.error.message;\n    }\n    console.log(\"Error state? \", state);\n    return _errors;\n  })\n  const currentBrandId = localStorage.getItem('currentBrand');\n  const brands = useSelector(state=>{\n    return state?.brand?.brands\n  })\n  const goToRegister = useCallback(() => history.push('/register'), [history]);\n  const handleGoToRegister = () => {\n    setOpen(false);\n    goToRegister()\n  };\n  const handleLogin = () => {\n      dispatch(loginAsync({id, password}, getState))\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const tokenBrands = useSelector(state=>{return state?.login?.tokens?.payload?.roles})\n  const tokens = useSelector(state=>{return state?.login?.tokens})\n  useEffect(() => {\n    console.log('tokens', tokens)\n    console.log('tokenBrands', tokenBrands)\n    if (tokens!==null && tokens!==undefined){\n      handleShowBrandSelector()\n    }\n    }, [tokens])\n\n  const handleShowBrandSelector = () => {\n    console.log('tokenBrands', tokenBrands)\n      if ((!tokenBrands)||(tokenBrands && tokenBrands.length<1)){\n        console.log('nobrands')\n        setOpen(false)\n        history.push('/brands')\n        dispatch(createBrand());\n      } else if (tokenBrands && tokenBrands.length>1){\n        console.log('manybrands', wizardInstance)\n        wizardInstance?.nextStep()\n      }else if (tokenBrands && tokenBrands.length==1){\n        console.log('onebrand', tokenBrands[0])\n        dispatch(setBrandCurrent({id:tokenBrands[0].brandId}))\n        //setOpen(false)\n      }\n  }\n  const loginView = \n  <div>\n    <Dialog open={open===true && !currentBrandId}\n      onClose={handleClose} aria-labelledby=\"form-dialog-title\"\n      disableBackdropClick={true}\n      disableEscapeKeyDown={true}>\n    <StepWizard initialStep={!tokens ? 1 : 2} instance={setWizardInstance}>\n      {/*<DialogTitle id=\"form-dialog-title\">{intl.formatMessage({ id: 'login' })}</DialogTitle>*/}\n      <div>\n      <DialogContent style={{ minWidth: '20em' }}>\n\n        {/*  <DialogContentText>\n          To subscribe to this website, please enter your email address here. We will send updates\n          occasionally.\n        </DialogContentText>*/}\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label={intl.formatMessage({ id: 'emailAddress' })}\n          type=\"email\"\n          error={errors.emailError}\n          helperText={errors.emailError}\n          fullWidth\n          onChange={(e)=>setId(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"name\"\n          label={intl.formatMessage({ id: 'password' })}\n          type=\"password\"\n          error={errors.passwordError}\n          helperText={errors.passwordError}\n          fullWidth\n          onChange={(e)=>setPassword(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <div />\n        <Button onClick={()=>{handleLogin();/*handleShowBrandSelector()*/}} color=\"primary\">\n          {intl.formatMessage({ id: 'login' })}\n        </Button>\n      </DialogActions>\n      <DialogActions>\n        <Button onClick={handleGoToRegister} color=\"primary\">\n          {intl.formatMessage({ id: 'register' })}\n        </Button>\n        <Button onClick={handleLogin} color=\"primary\">\n          {intl.formatMessage({ id: 'forgottenPassword' })}\n        </Button>\n      </DialogActions>\n      </div>\n      <div>\n        {tokens && !currentBrandId && <BrandSelector/>}\n      </div>\n    </StepWizard>\n    </Dialog>\n  </div>\n\n  return (\n    loginView\n  );\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport ViewComfy from '@material-ui/icons/ViewComfy';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  logout\n} from '../../features/globalSlice'\nimport {\n  useHistory\n} from \"react-router-dom\";\nimport {\n  setBrandCurrent, setCurrentBrand, switchBrand\n} from '../../features/brandSlice'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n    minHeight:'12px',\n    maxHeight:'3vh',\n    marginTop:'0'\n  },\n  searchIcon: {\n    padding: theme.spacing(1, 1),\n    height: '1vh',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize:'1px'\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n    marginTop:0,\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\n\n\nexport default function LupiAppBar(props) {\n  const history = useHistory();\n  const [anchorProfileElement, setAnchorProfileElement] = React.useState(null);\n  const handleOpenProfileMenu = (event) => {\n    setAnchorProfileElement(event.currentTarget);\n  };\n  const handleCloseProfileMenu = () => {\n    setAnchorProfileElement(null);\n  };\n  const classes = useStyles();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n      dispatch(logout());\n      setAnchorProfileElement(null);\n      history.push('')\n  } \n  const handleSwitchBrand = () => {\n    dispatch(switchBrand());\n    handleCloseProfileMenu();\n  };\n    return (\n        <AppBar position=\"static\" style={{height:'5vh', width:'100%', backgroundColor:'black', margins:0, padding:0, maxHeight:'4vh'}}>\n          <Toolbar style={{padding:0, minHeight:'1vh'}}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              style={{minHeight:'1vh', maxHeight:'1vh'}}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/*<IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon style={{fontSize:'.5em'}}/>\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\" size='.1em'>\n                <NotificationsIcon style={{fontSize:'.5em'}}/>\n              </Badge>\n            </IconButton>*/}\n            <IconButton color=\"inherit\">\n                <ViewComfy \n                  style={{fontSize:'.75em', color:props.displayMode!=='detail' ? 'pink' : 'white'}}\n                  onClick={()=>{\n                    if (props.setDisplayMode) {\n                      props.setDisplayMode('list');\n                    }\n                  }}/>\n            </IconButton>\n            <IconButton color=\"inherit\">\n                <ViewColumn \n                  style={{fontSize:'.75em', color:props.displayMode==='detail' ? 'pink' : 'white'}}\n                  onClick={()=>{\n                    if (props.setDisplayMode) {\n                      props.setDisplayMode('detail');\n                    }\n                  }}/>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={handleOpenProfileMenu}\n            >\n              <AccountCircle style={{fontSize:'.75em'}}/>\n            </IconButton>\n          </div>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorProfileElement}\n              keepMounted\n              open={Boolean(anchorProfileElement)}\n              onClose={handleCloseProfileMenu}\n            >\n            <MenuItem onClick={handleCloseProfileMenu}>{intl.formatMessage({ id: 'profile' })}</MenuItem>\n            <MenuItem onClick={handleLogout}>{intl.formatMessage({ id: 'logOut' })}</MenuItem>\n            <MenuItem onClick={handleSwitchBrand}>{intl.formatMessage({ id: 'switchBrand' })}</MenuItem>\n          </Menu>\n\n          <div style={{width:'2vh'}} />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n  ","import React, {useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport {useHistory} from \"react-router-dom\";\nimport LupiAppBar from '../components/LupiAppBar';\nimport { CssBaseline } from '@material-ui/core';\n\n\nexport default function About(props) {\n    const intl = useIntl();\n    const history = useHistory();\n    const handleGoToRegister = useCallback(() => history.push('/register'), [history]);\n\n  return (\n    <main style={{padding:0}}>\n        This is the 'about' screen.<br/>\n        {!props.loggedIn &&\n          <Button onClick={handleGoToRegister} color=\"primary\">\n            {intl.formatMessage({ id: 'register' })}\n          </Button>\n        }\n    </main>\n  );\n}\n","import React, {useCallback, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    registerAsync\n  } from '../../features/loginSlice'\nimport placeHolderHimage from '../assets/default-avatar.png'\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload } from 'react-icons/fa';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 180,\n    },\n});\n\nexport default function UserView(props) {\n    const classes = useStyles();\n    const intl = useIntl();\n    let emailError, passwordError;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    useSelector(state => {\n        console.log(\"state\", state);\n      if (state && state.login && state.login.fields) {\n        emailError = state?.login.error.fields.email;\n        passwordError = state?.login.error.fields.email;\n      }\n    })\n    const handleCancel = useCallback(() => history.push('/about'), [history]);\n    const [file, selectFile] = useFileUpload()\n    const defaultSrc = process.env.PUBLIC_URL+\"public/default-avatar.png\";\n    const defaultAvatar=require('./../assets/default-avatar.png')\n    const [id, setId] = useState();\n    const [password, setPassword] = useState();\n    const [passwordVerify, setPasswordVerify] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const handleRegister = () => {\n        dispatch(registerAsync({firstName, lastName, id, password}))\n    }\n\n    return (\n            <Card className={classes.root}>\n                <CardActionArea>\n                 {props.mode!=='register' && \n                    <CardMedia\n                        className={classes.media}\n                        image={file && file.source ? file.source : defaultSrc}\n                    >\n                        <FaFileUpload\n                            onClick={() => {\n                            // Single File Upload\n                            selectFile({ accept: 'image/*' })\n                            }}\n                            style={{position:'absolute', right:'0px', top: '0', fontSize:'2em', color:'rgba(0,0,0,0.5)'}}/>\n                    </CardMedia>\n                    }   \n                    <CardContent>\n                        {props.mode==='register' && \n                        <Typography variant=\"h5\" component=\"h2\">\n                            {intl.formatMessage({ id: 'createAccount' })}\n                        </Typography>\n                        }\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"email\"\n                            label={intl.formatMessage({ id: 'emailAddress' })}\n                            type=\"email\"\n                            error={emailError}\n                            helperText={emailError}\n                            fullWidth\n                            onChange={(e)=>setId(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"password\"\n                            label={intl.formatMessage({ id: 'password' })}\n                            type=\"password\"\n                            error={passwordError}\n                            helperText={passwordError}\n                            fullWidth\n                            onChange={(e)=>setPassword(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"password2\"\n                            label={intl.formatMessage({ id: 'passwordAgain' })}\n                            type=\"password\"\n                            error={passwordError}\n                            helperText={passwordError}\n                            fullWidth\n                            onChange={(e)=>setPasswordVerify(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"firstName\"\n                            label={intl.formatMessage({ id: 'firstName' })}\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e)=>setFirstName(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"lastName\"\n                            label={intl.formatMessage({ id: 'lastName' })}\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e)=>setLastName(e.target.value)}\n                        />\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={handleCancel}>\n                    {intl.formatMessage({ id: 'cancel' })}\n                    </Button>\n                {props.mode==='register' && \n                    <Button size=\"small\" color=\"primary\" onClick={handleRegister}>\n                    {intl.formatMessage({ id: 'register' })}\n                    </Button>\n                }\n                </CardActions>\n            </Card>\n    );\n}","import React, {useCallback, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    registerAsync\n  } from '../../features/loginSlice'\nimport placeHolderHimage from '../assets/default-avatar.png'\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload } from 'react-icons/fa';\nimport UserView from '../components/UserView';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 180,\n    },\n});\n\nexport default function Register() {\n    const classes = useStyles();\n    const intl = useIntl();\n    let emailError, passwordError;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    useSelector(state => {\n        console.log(\"state\", state);\n      if (state && state.login && state.login.fields) {\n        emailError = state?.login.error.fields.email;\n        passwordError = state?.login.error.fields.email;\n      }\n    })\n    const handleCancel = useCallback(() => history.push('/about'), [history]);\n    const [file, selectFile] = useFileUpload()\n    const defaultSrc = process.env.PUBLIC_URL+\"public/default-avatar.png\";\n    const defaultAvatar=require('./../assets/default-avatar.png')\n    const [id, setId] = useState();\n    const [password, setPassword] = useState();\n    const [passwordVerify, setPasswordVerify] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const handleRegister = () => {\n        dispatch(registerAsync({firstName, lastName, id, password}))\n    }\n\n    return (\n        <main>\n            <UserView mode='register'/>\n        </main>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport BrandView from '../components/BrandView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport {\n  createBrand,\n  loadBrandsAsync\n  } from '../../features/brandSlice'\nimport GenericListView from '../components/GenericListView';\nconst placeHolderImage = \"/default-avatar.png\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding:'16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Brands(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const brands = useSelector(state => state?.brand?.brands);\n  if (!brands) {\n    dispatch(loadBrandsAsync());\n  }\n  const mode = 'EDIT';//TODO user has the right to edit\n  let location = useLocation();\n  const path = location.pathname;\n  let brandId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  if (brandId === 'brands') {\n    brandId = false;\n  }\n  const intl = useIntl();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3} style={{height:'95vh'}}>\n        {brands && brands.map(brand => {\n            return (\n              <BrandView key={brand.id} brand={brand} displayMode={props.displayMode}/>\n              //<BrandView key={brand.id} brand={brand} displayMode={'wizard'} editing={true}/>\n            )\n        })}\n        {(!brands || brands?.length===0) && \n          <GenericListView\n          image={placeHolderImage}\n          title={intl.formatMessage({ id: 'createBrand' })}\n          onClick={() => {\n            props.setDisplayMode('detail');\n            dispatch(createBrand());\n          }} />\n        }\n      </Grid>\n    </div>\n  );\n}","import React, {useCallback, useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaWindowClose, FaExpandAlt, FaEdit, FaLock } from 'react-icons/fa';\nimport {\n  cancelCreateCollection, saveCollectionAsync\n  } from '../../features/collectionSlice'\nimport { MenuItem } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { allowedScope } from '../utility/token-utility';\nimport GenericListView from './GenericListView';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 245,\n        margin:6,\n        fontSize:'1em',\n        position: 'relative'\n    },\n    media: {\n        height: 120,\n    },\n    backdrop: {\n        zIndex: 99,\n        color: '#fff',\n        width: '100%',\n        position: 'absolute',\n        top:'0',\n        left:'0',\n        height:'100%'\n      }\n});\n\nexport default function CollectionView(props) {\n    const history = useHistory();\n    const classes = useStyles();\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const [collectionName, setCollectionName] = useState(props.collection.collectionName);\n    const [deliveryDate, setDeliveryDate] = useState(props.collection.deliveryDate);\n    const [markup, setMarkup] = useState(props.collection.markup);\n    const error=useSelector(state => {\n        //TODO this specific collection\n        return {}\n    })\n    const loading=useSelector(state=>{\n        if (state?.collection?.status?.id===props?.collection?.id) {\n            return state?.collection?.status?.status==='loading'\n        }\n    })\n    const handleSave = () => {\n        dispatch(saveCollectionAsync({id:props.collection.id, collectionName, deliveryDate, markup, brandId: props.collection.brandId}))\n    }\n    const handleCancel = () => {\n        dispatch(cancelCreateCollection({collection:props.collection}));\n    }\n    const [mode, setMode] = useState(props.collection.collectionName ? 'DISPLAY':'EDIT');\n    const canEdit=allowedScope(props.collection.brandId, 'collection:edit');\n    const [editorDialogue, showEditorDialogue] = useState(false);\n    const placeHolderImage = \"/default-avatar.png\";\n    const brand=useSelector(state=>{\n        return state?.brand?.brands?.find(brand=>brand.id===props.collection.brandId);\n    })\n    //console.log(\"COLLECTION VIEW\", props.collection)\n    const [isDirty, setDirty] = useState(false);\n    useEffect(()=>{\n        let dirty=collectionName!==props.collection.collectionName ||\n        deliveryDate!==props.collection.deliveryDate ||\n        markup!==props.collection.markup\n        setDirty(dirty);\n    })\n\n    const detailedView = <Card className={classes.root} m={18}>\n    <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n    </Backdrop>\n        <CardActionArea>\n            <CardContent>\n                <TextField\n                    value={collectionName}\n                    autoFocus\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"collectionName\"\n                    label={intl.formatMessage({ id: 'collectionName' })}\n                    type=\"text\"\n                    error={error.collectionName}\n                    helperText={error.collectionName}\n                    fullWidth\n                    onChange={(e)=>setCollectionName(e.target.value)}\n                />\n                <TextField\n                    value={deliveryDate}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"deliveryDate\"\n                    label={intl.formatMessage({ id: 'deliveryDate' })}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    type=\"date\"\n                    error={error.deliveryDate}\n                    helperText={error.deliveryDate}\n                    fullWidth\n                    onChange={(e)=>setDeliveryDate(e.target.value)}\n                />\n                <TextField\n                    value={markup}\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"markup\"\n                    label={intl.formatMessage({ id: 'markup' })}\n                    type=\"text\"\n                    error={error.markup}\n                    helperText={error.markup}\n                    fullWidth\n                    onChange={(e)=>setMarkup(e.target.value)}\n                />\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {mode === 'EDIT' &&\n                <FaLock color=\"primary\"\n                    onClick={()=>setMode('DETAIL')}>\n                </FaLock>\n            }\n            {mode==='EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    onClick={handleCancel}>\n                {intl.formatMessage({ id: 'delete' })}\n                </Button>\n           } \n           {mode==='EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    disabled={!isDirty}\n                    onClick={handleSave}>\n                {intl.formatMessage({ id: 'save' })}\n                </Button>\n            }\n            {mode !== 'EDIT' && canEdit &&\n                    <div >\n                <FaEdit color=\"primary\"\n                    onClick={()=>setMode('EDIT')}>\n                </FaEdit>\n                </div>\n            }\n        </CardActions>\n    </Card>\n\n    const summaryView=<>\n        <GenericListView\n            image={brand && brand.image ? brand.image : placeHolderImage}\n            colour='purple'\n            title={collectionName}\n            onClick={()=>{\n                history.push('/products/'+brand.id+'/products/'+props.collection.id)\n            }}\n            >\n            <div style={{position:'absolute',left:'2px', top:'2px'}}>\n            <FaExpandAlt color=\"primary\"\n                onClick={() => {\n                    showEditorDialogue(true)\n                }}>\n            </FaExpandAlt>\n            </div>\n        </GenericListView>\n        <Dialog onClose={() => showEditorDialogue(false)} open={editorDialogue}>\n            <FaWindowClose onClick={() => showEditorDialogue(false)} style={{ position: 'absolute', zIndex: 99 }} />\n            <div style={{ overflowY: 'scroll' }}>\n                {detailedView}\n            </div>\n        </Dialog>\n    </>\n    if (props.displayMode === 'detail') {\n        return (\n            detailedView\n        );\n    } else {\n        return (\n            summaryView\n        )\n    }\n}","import { useDispatch, useSelector } from 'react-redux';\nimport {\n    loadBrandsAsync\n    } from '../../features/brandSlice'\n\n\nexport default function CurrentBrandHeader(props) {\n    const dispatch = useDispatch();\n    const currentBrandId = localStorage.getItem('currentBrand');\n    const theBrand = useSelector(state=>{\n        console.log(\"CurrentBrandHeader\", state.brand)\n        if (currentBrandId) {\n            return state?.brand?.brands?.find(b=>b.id===currentBrandId)\n        }\n        \n    });\n    if (!theBrand) {\n        dispatch(loadBrandsAsync());\n    }\n    \nreturn (\n        <div style={{marginLeft:'0px', width:'100%', background:'black', marginBottom:'10px', color:'white', padding:'2px'}}>\n        {theBrand &&\n            <img src={theBrand.image} style={{height:'14px', background:'white', marginRight:'2px'}}/>\n        }\n        {theBrand ? theBrand.brandName : ''}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport CollectionView from '../components/CollectionView';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport { createCollection, createCollectionAsync, loadCollectionsAsync } from '../../features/collectionSlice';\nimport GenericListView from '../components/GenericListView';\nimport { loadBrandsAsync } from '../../features/brandSlice';\nimport CurrentBrandHeader from '../components/CurrentBrandHeader';\n\n\nconst placeHolderImage = \"/default-avatar.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding:'16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Collections(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const path = location.pathname;\n  let collectionId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  let brandId\n  if (path.lastIndexOf('products')>-1){\n    brandId = path.substr(path.indexOf('collections/') + 12, path.lastIndexOf('/products') - 13);\n  } else {\n    brandId = path.substr(path.indexOf('collections/') + 12, path.length)\n  }\n  console.log('aaa brandId', brandId)\n  const collections = useSelector(state => {\n      if (state?.collection?.collections) {\n        //console.log('aaa collections', JSON.stringify(state.collection.collections[brandId]))\n          return state.collection.collections[brandId];\n      }\n    })\n  if (!collections) {\n    console.log('aaa loading collections, brandId:', brandId)\n    dispatch(loadCollectionsAsync({brandId}));\n  }\n  const brand=useSelector(state => {\n    if (state?.brand?.brands) {\n        return state.brand.brands.find(brand=>brand.id===brandId);\n    }\n  })\n  if (!brand) {\n    dispatch(loadBrandsAsync());\n  }\n  const products = useSelector(state=>{\n    if (state?.product?.products){\n      return state?.product?.products[collectionId]\n    }\n  })\n  const mode = 'EDIT';//TODO user has the right to edit\n  const intl = useIntl();\n\n  return (\n    <div className={classes.root}>\n      <CurrentBrandHeader />\n    <Grid container spacing={3} style={{height:'95vh', padding:'12px'}} key='collectionGrid'>\n        {collections && collections.map(collection => {\n            return (\n              <CollectionView key={collection.id} collection={collection} displayMode={props.displayMode}/>\n            )\n          })}\n          {(!collections || (collections && collections.length===0)) && \n            <>noCollections</>\n          }\n          <GenericListView\n            image={placeHolderImage}\n            colour='purple'\n            title={intl.formatMessage({ id: 'createCollection' })}\n            onClick={() => {\n              props.setDisplayMode('detail');\n              dispatch(createCollectionAsync({brandId}));\n            }} />\n      </Grid>\n    </div>\n  );\n}\n/*\n            <GenericListView\n            image={placeHolderImage}\n            colour='purple'\n            title={intl.formatMessage({ id: 'createCollection' })}\n            onClick={() => {\n              props.setDisplayMode('detail');\n              dispatch(createCollection({brandId}));\n            }} />\n*/","import React, {useCallback, useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaWindowClose, FaExpandAlt, FaEdit, FaLock, FaFileUpload, FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport {\n  cancelCreateCollection, saveCollectionAsync\n  } from '../../features/collectionSlice'\nimport {\n  cancelCreateProduct, saveProductAsync\n  } from '../../features/productSlice'\nimport { MenuItem } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { allowedScope } from '../utility/token-utility';\nimport GenericListView from './GenericListView';\nimport Dialog from '@material-ui/core/Dialog';\nimport StepWizard from \"react-step-wizard\";\nimport Grid from '@material-ui/core/Grid';\nimport { useFileUpload } from 'use-file-upload';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 245,\n        margin: 6,\n        fontSize: '1em',\n        position: 'relative'\n    },\n    media: {\n        height: 120,\n    },\n    backdrop: {\n        zIndex: 99,\n        color: '#fff',\n        width: '100%',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%'\n    },\n    nextImageButton: {\n        position: \"relative\",\n        left:'92%',\n        bottom:'2%'\n    },\n    nextButton: {\n        position: \"relative\",\n        right:'-1260%',\n        bottom:'2%',\n        //top: '48vh'\n    },\n    backButton: {\n        position: \"relative\",\n        left:'10%',\n        bottom:'2%'\n    },\n    saveButton:{\n        position:\"relative\",\n        left:'23vw'\n    }\n});\n\nexport default function ProductView(props) {\n    const history = useHistory();\n    const classes = useStyles();\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const [productName, setProductName] = useState(props.product.productName);\n    const error=useSelector(state => {\n        //TODO this specific collection\n        return {}\n    })\n    const loading=useSelector(state=>{\n        if (state.product.status.id===props.product.id) {\n            return state.product.status.status==='loading'\n        }\n    })\n    const handleSave = () => {\n        dispatch(saveProductAsync({id:props.product.id, productName, collectionId: props.product.collectionId}))\n    }\n    const handleCancel = () => {\n        dispatch(cancelCreateProduct({product:props.product}));\n    }\n    const [mode, setMode] = useState(props.product.productName ? 'DISPLAY':'EDIT');\n    const canEdit=allowedScope(props.product.collectionId, 'collection:edit');\n    const [editorDialogue, showEditorDialogue] = useState(false);\n    const placeHolderImage = \"/default-avatar.png\";\n    const collection=useSelector(state=>{\n        console.log('state?.collection?.collections', state?.collection?.collections)\n        //return state?.collection?.collections?.find(collection=>collection.id===props.product.collectionId);\n    })\n    console.log(\"PRODUCT VIEW\", props.product)\n    const [isDirty, setDirty] = useState(false);\n    useEffect(()=>{\n        let dirty=productName!==props.product.productName\n        setDirty(dirty);\n    })\n    const [image, selectFile] = useFileUpload()\n\n    const detailedView = <Card className={classes.root} m={18}>\n    <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n    </Backdrop>\n        <CardActionArea>\n            <CardContent>\n                <TextField\n                    value={productName}\n                    autoFocus\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"productName\"\n                    label={intl.formatMessage({ id: 'productName' })}\n                    type=\"text\"\n                    error={error.productName}\n                    helperText={error.productName}\n                    fullWidth\n                    onChange={(e)=>setProductName(e.target.value)}\n                />\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {mode === 'EDIT' &&\n                <FaLock color=\"primary\"\n                    onClick={()=>setMode('DETAIL')}>\n                </FaLock>\n            }\n            {mode==='EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    onClick={handleCancel}>\n                {intl.formatMessage({ id: 'delete' })}\n                </Button>\n           } \n           {mode==='EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    disabled={!isDirty}\n                    onClick={handleSave}>\n                {intl.formatMessage({ id: 'save' })}\n                </Button>\n            }\n            {mode !== 'EDIT' && canEdit &&\n                    <div >\n                <FaEdit color=\"primary\"\n                    onClick={()=>setMode('EDIT')}>\n                </FaEdit>\n                </div>\n            }\n        </CardActions>\n    </Card>\nconst [wizardInstance, setWizardInstance] = useState();\nconst stepStyle={width: '30vw', height:'50vh'}\n    const summaryView=\n    <Grid container style={{width: '30vw', height:'60vh', overflow:'hidden'}}>\n        <StepWizard initialStep={1} instance={setWizardInstance}>\n            <div style={stepStyle}>\n            <Grid item container direction=\"column\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectImageProductWizard' })}\n                </Typography>\n                <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.product.image ? props.product.image : placeHolderImage}\n                onClick={() => {\n                    // Single File Upload\n                    selectFile({ accept: 'image/*' })\n                }}\n                style={stepStyle}\n            />\n            </Grid>\n            <Grid item container direction=\"column\" justify=\"space-between\" className={classes.nextImageButton}>\n                <p><button onClick={()=>wizardInstance.nextStep()}><FaArrowRight/></button></p>\n            </Grid>\n            </div>\n            \n            <div style={stepStyle}>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectNameProductWizard' })}\n                </Typography>\n                <TextField\n                    value={productName}\n                    autoFocus\n                    margin=\"none\"\n                    id=\"productName\"\n                    label={intl.formatMessage({ id: 'productName' })}\n                    type=\"text\"\n                    error={error.productName}\n                    helperText={error.productName}\n                    fullWidth\n                    onChange={(e) => setProductName(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button disabled={!productName} onClick={()=>wizardInstance.nextStep()} className={classes.nextButton}><FaArrowRight/></button></p>\n                </Grid>\n\n                </Grid>\n            </div>\n            <div>\n                <TextField\n                    value={'roundingRules'}\n                    margin=\"none\"\n                    id=\"roundingRules\"\n                    label={intl.formatMessage({ id: 'roundingRules' })}\n                    type=\"text\"\n                    error={error.roundingRules}\n                    helperText={error.roundingRules}\n                    fullWidth\n                    onChange={(e) => console.log('changed rounding rules')}\n                />\n                <Grid container>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                <p><Button size=\"small\" color=\"primary\"\n                className={classes.saveButton}\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button></p>\n                </Grid>\n                </Grid>\n                <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n            </div>\n        </StepWizard>\n    </Grid>\n    \n\n    \n    //if (props.displayMode === 'detail') {\n    if (props.displayMode === 'detail') {\n        return (\n            detailedView\n        );\n    } else {\n        return (\n            <>\n                <GenericListView\n                    image={image && image.source ? image.source : props.product.image ? props.product.image : placeHolderImage}\n                    title={productName}\n                    onClick={()=>{\n                        //history.push('/collections/'+props.product.id)\n                    }}\n                    >\n                    <div style={{position:'absolute',left:'2px', top:'2px'}}>\n                    <FaExpandAlt color=\"primary\"\n                        onClick={() => {\n                            showEditorDialogue(true)\n                        }}>\n                    </FaExpandAlt>\n                    </div>\n                </GenericListView>\n                <Dialog onClose={() => showEditorDialogue(false)} open={editorDialogue}>\n                    <Grid>\n                    <FaWindowClose onClick={() => {showEditorDialogue(false); console.log('showEditorDialogue')}} style={{ position: 'absolute', zIndex: 99 }} />\n                    {summaryView}\n                    </Grid>\n                </Dialog>\n            </>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport ProductView from '../components/ProductView';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport { loadCollectionsAsync } from '../../features/collectionSlice';\nimport { createProduct, createProductAsync, loadProductsAsync } from '../../features/productSlice';\nimport GenericListView from '../components/GenericListView';\nimport { loadBrandsAsync } from '../../features/brandSlice';\nimport CurrentBrandHeader from '../components/CurrentBrandHeader';\n\n\nconst placeHolderImage = \"/default-avatar.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding:'16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Products(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const path = location.pathname;\n  const brands = useSelector(state => state?.brand?.brands);\n  if (!brands) {\n    dispatch(loadBrandsAsync());\n  }\n  let collectionId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  let brandId = path.substr(path.indexOf('products/') + 9, path.lastIndexOf('/products') - 10);\n  const products = useSelector(state => {\n    console.log(\"PRODUCTS\", state.product);\n      if (state?.product?.products) {\n        console.log('state.product.products[collectionId]', state.product.products[collectionId])\n          return state.product.products[collectionId];\n      }\n    })\n  if (!products) {\n    dispatch(loadProductsAsync({collectionId}));\n  }\n  const theCollection=useSelector(state => {\n    let collectionObject = {}\n    if (state?.collection?.collections[brandId] && state?.collection?.collections[brandId].length>0) {\n      for (var i in state?.collection?.collections[brandId]){\n        if (state?.collection?.collections[brandId][i].id == collectionId){\n          collectionObject = state?.collection?.collections[brandId][i]\n        }\n      }\n    }\n    return collectionObject\n    })\n  if (!theCollection) {\n    //dispatch(loadCollectionsAsync({collectionId}));\n  }\n\n  const mode = 'EDIT';//TODO user has the right to edit\n  const intl = useIntl();\n  return (\n    <div className={classes.root}>\n      <CurrentBrandHeader />\n    <Grid container spacing={3} style={{height:'95vh', padding:'12px'}}>\n        {products && products.map(product => {\n            return (\n              <ProductView key={product.id} product={product} displayMode={props.displayMode}/>\n            )\n          })}\n          {(!products || (products && products.length===0)) && \n            <GenericListView\n            image={placeHolderImage}\n            colour='purple'\n            title={intl.formatMessage({ id: 'createProduct' })}\n            onClick={() => {\n              //props.setDisplayMode('detail')\n              dispatch(createProductAsync({collectionId}));\n            }} />\n          }\n      </Grid>\n    </div>\n  );\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload, FaWindowClose, FaExpandAlt, FaEdit, FaLock, FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport {\n    cancel, saveAsync\n} from '../../features/fabricSlice'\nimport { MenuItem } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GenericListView from './GenericListView';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useHistory } from 'react-router-dom';\nimport { allowedScope } from '../utility/token-utility';\nimport StepWizard from \"react-step-wizard\";\nimport Grid from '@material-ui/core/Grid';\nimport { local } from '../../features/environment';\nconst placeHolderImage = \"/default-avatar.png\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 245,\n        margin: 6,\n        fontSize: '1em',\n        position: 'relative'\n    },\n    media: {\n        height: 120,\n    },\n    backdrop: {\n        zIndex: 99,\n        color: '#fff',\n        width: '100%',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%'\n    },\n    nextImageButton: {\n        position: \"relative\",\n        left:'92%',\n        bottom:'2%'\n    },\n    nextButton: {\n        position: \"relative\",\n        right:'-1260%',\n        bottom:'2%',\n        //top: '48vh'\n    },\n    backButton: {\n        position: \"relative\",\n        left:'10%',\n        bottom:'2%'\n    },\n    saveButton:{\n        position:\"relative\",\n        left:'23vw'\n    }\n});\n\nexport default function FabricView(props) {\n    const classes = useStyles();\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const [fabricName, setFabricName] = useState(props.fabric.fabricName);\n    const [image, selectFile] = useFileUpload()\n    const errors = useSelector(state => {\n        if (state?.fabric?.error) {\n            return state.fabric.error;\n        } else {\n            return {}\n        }\n    })\n    const [error, setError] = useState(errors)\n    const loading = useSelector(state => {\n        if (state.fabric.status.id === props.fabric.id) {\n            return state.fabric.status.status === 'loading'\n        }\n    })\n    const defaultSrc = process.env.PUBLIC_URL + \"public/default-avatar.png\";\n    const handleSave = () => {\n        if (!fabricName || fabricName.length<1 || fabricName.length>256) {\n            setError({fabricName:'Name cannot be blank'});\n        } else {\n            let imageValue = image ? image : props.fabric.image ? props.fabric.image : undefined\n            console.log('imageValue', imageValue)\n            dispatch(saveAsync({ id: props.fabric.id, image:imageValue, fabricName, brandId: props.fabric.brandId }))\n        }\n    }\n    useEffect(()=>{\n        console.log('loading', loading, 'props.fabric.editing', props.fabric.editing)\n        if (!loading&&!props.fabric.editing){\n            showEditorDialogue(false)\n        }\n    }, [loading])\n    const handleCancel = () => {\n        dispatch(cancel({ id: props.fabric.id }));\n    }\n    const [editorDialogue, showEditorDialogue] = useState(props.fabric && props.fabric.editing);\n    const history = useHistory();\n    const [mode, setMode] = useState(props.fabric.fabricName ? 'DISPLAY':'EDIT');\n    const canEdit=allowedScope(props.fabric.brandId, 'fabric:edit');\n    const brand=useSelector(state=>{\n        return state?.brand?.brands?.find(brand=>brand.id===props.fabric.brandId);\n    })\n    const [isDirty, setDirty] = useState(false);\n    useEffect(()=>{\n        let dirty=fabricName!==props.fabric.fabricName ||\n            image!==props.fabric.image;\n        setDirty(dirty);\n    })\n\n    console.log('fabricName', fabricName)\n\n    const detailedView = \n    <Card className={classes.root} m={18}>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <CardActionArea>\n            <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.fabric.image ? props.fabric.image : placeHolderImage}\n            >\n                {mode === 'EDIT' &&\n                    <FaFileUpload\n                        onClick={() => {\n                            // Single File Upload\n                            selectFile({ accept: 'image/*' })\n                        }}\n                        style={{ position: 'absolute', right: '0px', top: '0', fontSize: '2em', color: 'rgba(0,0,0,0.5)' }} />\n                }\n            </CardMedia>\n            <CardContent>\n                <TextField\n                    value={fabricName}\n                    autoFocus\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"fabricName\"\n                    label={intl.formatMessage({ id: 'fabricName' })}\n                    type=\"text\"\n                    error={error.fabricName}\n                    helperText={error.fabricName}\n                    fullWidth\n                    onChange={(e) => setFabricName(e.target.value)}\n                />\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {mode === 'EDIT' &&\n                <FaLock color=\"primary\"\n                    onClick={()=>setMode('DETAIL')}>\n                </FaLock>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    onClick={handleCancel}>\n                    {intl.formatMessage({ id: 'delete' })}\n                </Button>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button>\n            }\n            {isDirty}\n            {mode !== 'EDIT' && canEdit &&\n                    <div >\n                <FaEdit color=\"primary\"\n                    onClick={()=>setMode('EDIT')}>\n                </FaEdit>\n                </div>\n            }\n        </CardActions>\n    </Card>\n    const [wizardInstance, setWizardInstance] = useState();\n    const stepStyle={width: '30vw', height:'50vh'}\n    const wizardView = \n    <Grid container style={{width: '30vw', height:'60vh', overflow:'hidden'}}>\n        <StepWizard initialStep={1} instance={setWizardInstance}>\n            <div style={stepStyle}>\n            <Grid item container direction=\"column\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectImageFabricWizard' })}\n                </Typography>\n                <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.fabric.image ? props.fabric.image : placeHolderImage}\n                onClick={() => {\n                    // Single File Upload\n                    selectFile({ accept: 'image/*' })\n                }}\n                style={stepStyle}\n            />\n            </Grid>\n            <Grid item container direction=\"column\" justify=\"space-between\" className={classes.nextImageButton}>\n                <p><button onClick={()=>wizardInstance.nextStep()}><FaArrowRight/></button></p>\n            </Grid>\n            </div>\n            \n            <div style={stepStyle}>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectNameFabricWizard' })}\n                </Typography>\n                <TextField\n                    value={fabricName}\n                    autoFocus\n                    margin=\"none\"\n                    id=\"fabricName\"\n                    label={intl.formatMessage({ id: 'fabricName' })}\n                    type=\"text\"\n                    error={error.fabricName}\n                    helperText={error.fabricName}\n                    fullWidth\n                    onChange={(e) => setFabricName(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                <p><Button size=\"small\" color=\"primary\"\n                className={classes.saveButton}\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button></p>\n                </Grid>\n\n                </Grid>\n            </div>\n        </StepWizard>\n        </Grid>\n    if (props.displayMode === 'detail') {\n        return (\n            <>\n            {detailedView}\n            </>\n        );\n    } else {\n        return (\n            <>\n                <GenericListView\n                    image={image && image.source ? image.source : props.fabric.image ? props.fabric.image : placeHolderImage}\n                    title={fabricName}\n                    onClick={()=>{\n                        history.push('/fabrics/'+props.brand.id)\n                    }}\n                    >\n                    <div style={{position:'absolute',left:'2px', top:'2px'}}>\n                    <FaExpandAlt color=\"primary\"\n                        onClick={() => {\n                            showEditorDialogue(true)\n                        }}>\n                    </FaExpandAlt>\n                    </div>\n                </GenericListView>\n                <Dialog onClose={() => showEditorDialogue(false)} open={editorDialogue}>\n                    <Grid>\n                    <FaWindowClose onClick={() => {showEditorDialogue(false)}} style={{ position: 'absolute', zIndex: 99 }} />\n                    {wizardView}\n                    </Grid>\n                </Dialog>\n            </>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport FabricView from '../components/FabricView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport {\n  createFabric,\n  createFabricAsync,\n  loadFabricsAsync\n} from '../../features/fabricSlice'\nimport GenericListView from '../components/GenericListView';\nimport CurrentBrandHeader from '../components/CurrentBrandHeader';\nconst placeHolderImage = \"/default-avatar.png\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding: '16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Fabrics(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const path = location.pathname;\n  let brandId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  if (brandId === 'fabrics') {\n    brandId = false;\n  }\n  const fabrics = useSelector(state => {\n    if (state?.fabric?.fabrics) {\n      console.log('fabricslog', state.fabric.fabrics)\n      return state.fabric.fabrics[brandId]\n      //return state.fabric.fabrics\n    }\n  });\n  if (!fabrics) {\n    dispatch(loadFabricsAsync({ brandId }));\n  }\n  const brand = useSelector(state => {\n    if (state?.brand?.brands) {\n      return state.brand.brands.find(brand => brand.id === brandId);\n    }\n  })\n  const mode = 'EDIT';//TODO user has the right to edit\n  const intl = useIntl();\n  return (\n    <div className={classes.root}>\n      <CurrentBrandHeader />\n      <Grid container spacing={3} style={{ height: '95vh' }}>\n        {fabrics && fabrics.map(fabric => {\n          return (\n            <>\n              <FabricView key={fabric.id} fabric={fabric} displayMode={props.displayMode} />\n            </>\n          )\n        })}\n        {/*(!fabrics || fabrics.length===0) &&\n          <GenericListView\n          image={placeHolderImage}\n          title={intl.formatMessage({ id: 'createFabric' })}\n          onClick={() => {\n            props.setDisplayMode('detail');\n            dispatch(createFabricAsync({brandId}));\n          }} />\n        */}\n        <GenericListView\n          image={placeHolderImage}\n          title={intl.formatMessage({ id: 'createFabric' })}\n          onClick={() => {\n            props.setDisplayMode('detail');\n            dispatch(createFabric({ brandId }));\n          }} />\n      </Grid>\n    </div>\n  );\n}","import React, {useCallback, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    brandUserAsync,\n    registerAsync\n  } from '../../features/loginSlice'\nimport {\n    cancelCreateUser\n  } from '../../features/userSlice'\nimport { deleteUserRole } from '../../features/userSlice';\nimport placeHolderHimage from '../assets/default-avatar.png'\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload } from 'react-icons/fa';\nimport { MenuItem } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 180,\n    },\n});\n\nexport default function BrandUserView(props) {\n    const classes = useStyles();\n    const intl = useIntl();\n    let emailError, passwordError;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    useSelector(state => {\n      if (state && state.login && state.login.fields) {\n        emailError = state?.login.error.fields.email;\n        passwordError = state?.login.error.fields.email;\n      }\n    })\n    const handleCancel = useCallback(() => {\n        //dispatch(cancelCreateUser({user:{brandId:currentBrand.id, id:props.user.id}}))\n        dispatch(cancelCreateUser({user:{brandId:currentBrandId, id:user?.id}}))\n        //TODO this dispatch is sending an undefined ID (and that might actually be fine)\n        //Update: not sending an unidentified ID anymore, but it's broken again\n    }, [history]);\n    const [file, selectFile] = useFileUpload()\n    const defaultSrc = process.env.PUBLIC_URL+\"public/default-avatar.png\";\n    const defaultAvatar=require('./../assets/default-avatar.png')\n    const handleRegister = () => {\n        props.setDisplayMode('register')\n        dispatch(brandUserAsync({email, brand}))\n    }\n    const currentBrandId = localStorage.getItem('currentBrand');\n    const handleDelete = (id) => {\n        console.log('deleting user', id, 'with currentBrandId', currentBrandId)\n        dispatch(deleteUserRole({id:id, currentBrandId:currentBrandId}))\n    }\n    const brands = useSelector(state=>{return state.brand.brands})\n    const [brand, setBrand] = useState();\n    const [email, setEmail] = useState();\n    const newUser = useSelector(state=>{return state.login.newUser})\n    const user = props.user\n    console.log('props.user', props.user)\n    //if (props?.displayMode=='register'){\n    if (props?.user?.editing==true){\n        return (\n            <Card className={classes.root}>\n                <CardActionArea>  \n                    <CardContent>\n                        {props.mode==='register' && \n                        <Typography variant=\"h5\" component=\"h2\">\n                            {intl.formatMessage({ id: 'createAccount' })}\n                        </Typography>\n                        }\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"email\"\n                            label={intl.formatMessage({ id: 'emailAddress' })}\n                            type=\"email\"\n                            error={emailError}\n                            helperText={emailError}\n                            fullWidth\n                            onChange={(e)=>setEmail(e.target.value)}\n                        />\n                        <TextField id=\"brand\"\n                            //value={operatingCurrency}\n                            margin=\"none\"\n                            label={intl.formatMessage({ id: 'brand' })}\n                            onChange={(e) => setBrand(e.target.value)}\n                            //error={error.brand}\n                            //helperText={error.brand}\n                            select>\n                            {brands && brands.map(brand=>{\n                                return(\n                                    <MenuItem value={brand.id} key={brand.id}>{brand.brandName}</MenuItem>\n                                )\n                            })}\n                        </TextField>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={handleCancel}>\n                    {intl.formatMessage({ id: 'cancel' })}\n                    </Button>\n                    <Button size=\"small\" color=\"primary\" onClick={handleRegister}>\n                    {intl.formatMessage({ id: 'register' })}\n                    </Button>\n                </CardActions>\n                {newUser && \n                <>\n                New user {newUser.id}'s temporary password is {newUser.password}\n                </>}\n            </Card>\n    );\n    } else {\n        return ( /*user ? user :*/\n            <Card className={classes.root}>\n                <CardActionArea>  \n                    <CardContent>\n                        <div>\n                            {user?.id ? user?.id : 'new user'}\n                        </div>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\" onClick={()=>{\n                        console.log('handleDelete', user)\n                        handleDelete(user?.id)\n                        }}>\n                    {intl.formatMessage({ id: 'delete' })}\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport UserView from '../components/UserView';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport { loadCollectionsAsync } from '../../features/collectionSlice';\nimport { createUser, createUserAsync, loadUsersAsync } from '../../features/userSlice';\nimport GenericListView from '../components/GenericListView';\nimport { loadBrandsAsync } from '../../features/brandSlice';\nimport BrandUserView from '../components/BrandUserView';\nimport CurrentBrandHeader from '../components/CurrentBrandHeader'\n\n\nconst placeHolderImage = \"/default-avatar.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding:'16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Users(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const path = location.pathname;\n  const brands = useSelector(state => state?.brand?.brands);\n  if (!brands) {\n    dispatch(loadBrandsAsync());\n  }\n  let brandId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  console.log('brandId', brandId)\n  const users = useSelector(state => {\n    console.log(\"USERS\", state.user.users[brandId]);\n      if (state?.user) {\n          return state.user.users[brandId];\n      }\n    })\n  if (!users) {\n    dispatch(loadUsersAsync({brandId}));\n  }\n  const theBrand=useSelector(state => {\n    if (state?.brand?.brands) {\n        let brandObject = {}\n        for (var i in state?.brand?.brands){\n            brandObject = state?.brand?.brands.find(brand=>brand.id===brandId);\n        }\n        return brandObject\n    }\n  })\n  if (!theBrand) {\n    dispatch(loadBrandsAsync({brandId}));\n  }\n\n  const mode = 'EDIT';//TODO user has the right to edit\n  const intl = useIntl();\nreturn (\n    <div className={classes.root}>\n      <CurrentBrandHeader />\n    <Grid container spacing={3} style={{height:'95vh', padding:'12px'}}>\n      <GenericListView\n        image={placeHolderImage}\n        colour='purple'\n        title={intl.formatMessage({ id: 'createUser' })}\n        onClick={() => {\n          props.setDisplayMode('register');\n          dispatch(createUserAsync({brandId}));\n        }}\n      />\n        {users && users.map(user => {\n          console.log('usermap', user, 'from users', users)\n            return (\n              //<BrandUserView key={user.id} user={user} displayMode={/*props.displayMode*/'display'}/>\n              //<BrandUserView key={user.id} user={user} displayMode={'register'}/>\n              <BrandUserView key={user.id} user={user} displayMode={props.displayMode} setDisplayMode={props.setDisplayMode}/>\n            )\n          })}\n      </Grid>\n    </div>\n  );\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFileUpload } from 'use-file-upload'\nimport { FaFileUpload, FaWindowClose, FaExpandAlt, FaEdit, FaLock, FaArrowRight, FaArrowLeft } from 'react-icons/fa';\nimport {\n    cancel, saveAsync\n} from '../../features/fournitureSlice'\nimport { MenuItem } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GenericListView from './GenericListView';\nimport Dialog from '@material-ui/core/Dialog';\nimport { useHistory } from 'react-router-dom';\nimport { allowedScope } from '../utility/token-utility';\nimport StepWizard from \"react-step-wizard\";\nimport Grid from '@material-ui/core/Grid';\nimport { local } from '../../features/environment';\nconst placeHolderImage = \"/default-avatar.png\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 245,\n        margin: 6,\n        fontSize: '1em',\n        position: 'relative'\n    },\n    media: {\n        height: 120,\n    },\n    backdrop: {\n        zIndex: 99,\n        color: '#fff',\n        width: '100%',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%'\n    },\n    nextImageButton: {\n        position: \"relative\",\n        left:'92%',\n        bottom:'2%'\n    },\n    nextButton: {\n        position: \"relative\",\n        right:'-1260%',\n        bottom:'2%',\n        //top: '48vh'\n    },\n    backButton: {\n        position: \"relative\",\n        left:'10%',\n        bottom:'2%'\n    },\n    saveButton:{\n        position:\"relative\",\n        left:'23vw'\n    }\n});\n\nexport default function FournitureView(props) {\n    const classes = useStyles();\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const [fournitureName, setFournitureName] = useState(props.fourniture.fournitureName);\n    const [image, selectFile] = useFileUpload()\n    const errors = useSelector(state => {\n        if (state?.fourniture?.error) {\n            return state.fourniture.error;\n        } else {\n            return {}\n        }\n    })\n    const [error, setError] = useState(errors)\n    const loading = useSelector(state => {\n        if (state.fourniture.status.id === props.fourniture.id) {\n            return state.fourniture.status.status === 'loading'\n        }\n    })\n    const defaultSrc = process.env.PUBLIC_URL + \"public/default-avatar.png\";\n    const handleSave = () => {\n        if (!fournitureName || fournitureName.length<1 || fournitureName.length>256) {\n            setError({fournitureName:'Name cannot be blank'});\n        } else {\n            let imageValue = image ? image : props.fourniture.image ? props.fourniture.image : undefined\n            console.log('imageValue', imageValue)\n            dispatch(saveAsync({ id: props.fourniture.id, image:imageValue, fournitureName, brandId: props.fourniture.brandId }))\n        }\n    }\n    useEffect(()=>{\n        console.log('loading', loading, 'props.fourniture.editing', props.fourniture.editing)\n        if (!loading&&!props.fourniture.editing){\n            showEditorDialogue(false)\n        }\n    }, [loading])\n    const handleCancel = () => {\n        dispatch(cancel({ id: props.fourniture.id }));\n    }\n    const [editorDialogue, showEditorDialogue] = useState(props.fourniture && props.fourniture.editing);\n    const history = useHistory();\n    const [mode, setMode] = useState(props.fourniture.fournitureName ? 'DISPLAY':'EDIT');\n    const canEdit=allowedScope(props.fourniture.brandId, 'fourniture:edit');\n    const brand=useSelector(state=>{\n        return state?.brand?.brands?.find(brand=>brand.id===props.fourniture.brandId);\n    })\n    const [isDirty, setDirty] = useState(false);\n    useEffect(()=>{\n        let dirty=fournitureName!==props.fourniture.fournitureName ||\n            image!==props.fourniture.image;\n        setDirty(dirty);\n    })\n\n    console.log('fournitureName', fournitureName)\n\n    const detailedView = \n    <Card className={classes.root} m={18}>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <CardActionArea>\n            <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.fourniture.image ? props.fourniture.image : placeHolderImage}\n            >\n                {mode === 'EDIT' &&\n                    <FaFileUpload\n                        onClick={() => {\n                            // Single File Upload\n                            selectFile({ accept: 'image/*' })\n                        }}\n                        style={{ position: 'absolute', right: '0px', top: '0', fontSize: '2em', color: 'rgba(0,0,0,0.5)' }} />\n                }\n            </CardMedia>\n            <CardContent>\n                <TextField\n                    value={fournitureName}\n                    autoFocus\n                    disabled={mode!=='EDIT'}\n                    margin=\"none\"\n                    id=\"fournitureName\"\n                    label={intl.formatMessage({ id: 'fournitureName' })}\n                    type=\"text\"\n                    error={error.fournitureName}\n                    helperText={error.fournitureName}\n                    fullWidth\n                    onChange={(e) => setFournitureName(e.target.value)}\n                />\n            </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {mode === 'EDIT' &&\n                <FaLock color=\"primary\"\n                    onClick={()=>setMode('DETAIL')}>\n                </FaLock>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                    onClick={handleCancel}>\n                    {intl.formatMessage({ id: 'delete' })}\n                </Button>\n            }\n            {mode === 'EDIT' &&\n                <Button size=\"small\" color=\"primary\"\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button>\n            }\n            {isDirty}\n            {mode !== 'EDIT' && canEdit &&\n                    <div >\n                <FaEdit color=\"primary\"\n                    onClick={()=>setMode('EDIT')}>\n                </FaEdit>\n                </div>\n            }\n        </CardActions>\n    </Card>\n    const [wizardInstance, setWizardInstance] = useState();\n    const stepStyle={width: '30vw', height:'50vh'}\n    const wizardView = \n    <Grid container style={{width: '30vw', height:'60vh', overflow:'hidden'}}>\n        <StepWizard initialStep={1} instance={setWizardInstance}>\n            <div style={stepStyle}>\n            <Grid item container direction=\"column\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectImageFournitureWizard' })}\n                </Typography>\n                <CardMedia\n                className={classes.media}\n                image={image && image.source ? image.source : props.fourniture.image ? props.fourniture.image : placeHolderImage}\n                onClick={() => {\n                    // Single File Upload\n                    selectFile({ accept: 'image/*' })\n                }}\n                style={stepStyle}\n            />\n            </Grid>\n            <Grid item container direction=\"column\" justify=\"space-between\" className={classes.nextImageButton}>\n                <p><button onClick={()=>wizardInstance.nextStep()}><FaArrowRight/></button></p>\n            </Grid>\n            </div>\n            \n            <div style={stepStyle}>\n            <Grid item container direction=\"row\" justify=\"flex-start\">\n                <Typography variant=\"h8\" component=\"h8\">\n                    {intl.formatMessage({ id: 'selectNameFournitureWizard' })}\n                </Typography>\n                <TextField\n                    value={fournitureName}\n                    autoFocus\n                    margin=\"none\"\n                    id=\"fournitureName\"\n                    label={intl.formatMessage({ id: 'fournitureName' })}\n                    type=\"text\"\n                    error={error.fournitureName}\n                    helperText={error.fournitureName}\n                    fullWidth\n                    onChange={(e) => setFournitureName(e.target.value)}\n                />\n                <Grid item direction=\"row\" justify=\"space-between\">\n                    <p><button onClick={()=>wizardInstance.previousStep()} className={classes.backButton}><FaArrowLeft/></button></p>\n                </Grid>\n                <Grid item direction=\"row\" justify=\"space-between\">\n                <p><Button size=\"small\" color=\"primary\"\n                className={classes.saveButton}\n                disabled={!isDirty}\n                    onClick={handleSave}>\n                    {intl.formatMessage({ id: 'save' })}\n                </Button></p>\n                </Grid>\n\n                </Grid>\n            </div>\n        </StepWizard>\n        </Grid>\n    if (props.displayMode === 'detail') {\n        return (\n            <>\n            {detailedView}\n            </>\n        );\n    } else {\n        return (\n            <>\n                <GenericListView\n                    image={image && image.source ? image.source : props.fourniture.image ? props.fourniture.image : placeHolderImage}\n                    title={fournitureName}\n                    onClick={()=>{\n                        history.push('/fournitures/'+props.brand.id)\n                    }}\n                    >\n                    <div style={{position:'absolute',left:'2px', top:'2px'}}>\n                    <FaExpandAlt color=\"primary\"\n                        onClick={() => {\n                            showEditorDialogue(true)\n                        }}>\n                    </FaExpandAlt>\n                    </div>\n                </GenericListView>\n                <Dialog onClose={() => showEditorDialogue(false)} open={editorDialogue}>\n                    <Grid>\n                    <FaWindowClose onClick={() => {showEditorDialogue(false)}} style={{ position: 'absolute', zIndex: 99 }} />\n                    {wizardView}\n                    </Grid>\n                </Dialog>\n            </>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useIntl } from 'react-intl';\nimport FournitureView from '../components/FournitureView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport {\n  useLocation\n} from \"react-router-dom\";\nimport {\n  createFourniture,\n  createFournitureAsync,\n  loadFournituresAsync\n} from '../../features/fournitureSlice'\nimport GenericListView from '../components/GenericListView';\nimport CurrentBrandHeader from '../components/CurrentBrandHeader';\nconst placeHolderImage = \"/default-avatar.png\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'scroll',\n    overlfowY: 'scroll',\n    padding: '16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function Fournitures(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const path = location.pathname;\n  let brandId = path.substr(path.lastIndexOf('/') + 1, path.length);\n  if (brandId === 'fournitures') {\n    brandId = false;\n  }\n  const fournitures = useSelector(state => {\n    if (state?.fourniture?.fournitures) {\n      console.log('fournitureslog', state.fourniture.fournitures)\n      return state.fourniture.fournitures[brandId]\n      //return state.fourniture.fournitures\n    }\n  });\n  if (!fournitures) {\n    dispatch(loadFournituresAsync({ brandId }));\n  }\n  const brand = useSelector(state => {\n    if (state?.brand?.brands) {\n      return state.brand.brands.find(brand => brand.id === brandId);\n    }\n  })\n  const mode = 'EDIT';//TODO user has the right to edit\n  const intl = useIntl();\n  return (\n    <div className={classes.root}>\n      <CurrentBrandHeader />\n      <Grid container spacing={3} style={{ height: '95vh' }}>\n        {fournitures && fournitures.map(fourniture => {\n          return (\n            <>\n              <FournitureView key={fourniture.id} fourniture={fourniture} displayMode={props.displayMode} />\n            </>\n          )\n        })}\n        {/*(!fournitures || fournitures.length===0) &&\n          <GenericListView\n          image={placeHolderImage}\n          title={intl.formatMessage({ id: 'createFourniture' })}\n          onClick={() => {\n            props.setDisplayMode('detail');\n            dispatch(createFournitureAsync({brandId}));\n          }} />\n        */}\n        <GenericListView\n          image={placeHolderImage}\n          title={intl.formatMessage({ id: 'createFourniture' })}\n          onClick={() => {\n            props.setDisplayMode('detail');\n            dispatch(createFourniture({ brandId }));\n          }} />\n      </Grid>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport 'react-pro-sidebar/dist/css/styles.css';\n//https://react-icons.github.io/react-icons/icons?name=fa\nimport LupiMenu from './app/LupiMenu';\n//import Switch from 'react-switch';\nimport './App.scss';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux'\n//https://material-ui.com/getting-started/usage/\nimport Login from './app/screens/Login'\nimport About from './app/screens/About';\nimport Register from './app/screens/Register';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\nimport Brands from './app/screens/Brands';\nimport Collections from './app/screens/Collections';\nimport Products from './app/screens/Products';\nimport Fabrics from './app/screens/Fabrics';\nimport Users from './app/screens/Users';\nimport Fournitures from './app/screens/Fournitures';\nimport LupiAppBar from './app/components/LupiAppBar';\nimport BrandSelector from './app/components/BrandSelector';\nimport { Container, Panel } from 'react-scrolling-panel';\n\nfunction App() {\n  const dispatch = useDispatch();\n  var loggedIn = useSelector(state => {\n    let result = localStorage.getItem('tokens');\n    console.log(\"is logged in \", JSON.parse(result), (result != null));\n    return result != null;\n  });\n  var currentBrandId = localStorage.getItem('currentBrand');\n  console.log('currentBrand', currentBrandId)\n  const [locale, setLocale] = useState('fr');\n  const handleToggleSidebar = () => {\n\n  }\n  const [collapsed, setCollapsed] = useState(false);\n  let location = useLocation();\n  const path = location.pathname;\n  const intl = useIntl();\n\n  const [displayMode, setDisplayMode] = useState('list');\n  useEffect(()=>{\n    console.log('displayMode', displayMode)\n  },[displayMode])\n  console.log('showLogger',\n  ((loggedIn!==true || !currentBrandId)&&path!=='/register'),\n  'loggedIn', loggedIn,\n  'currentBrandId', currentBrandId\n  )\n  /*\n  useEffect(()=>{\n    //console.log('showLogin', ((loggedIn!==true || !currentBrandId)&&path!='/register'))\n    if (!currentBrandId){\n      console.log('would show now')\n    }\n  },[currentBrandId])\n  */\nreturn (\n    <div className={`app `} style={{width:'100%'}}>\n      {((loggedIn!==true || !currentBrandId)&&path!=='/register')&&<Login shown={((loggedIn!==true || !currentBrandId)&&path!=='/register')} />}\n      <LupiMenu setDisplayMode={setDisplayMode}/>\n      <div style={{width:'100%'}}>\n        <div>\n          <LupiAppBar setDisplayMode={setDisplayMode} displayMode={displayMode}/>\n        </div>\n        <div>\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/brands\">\n              <Brands  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/collections\">\n              <Collections  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/products\">\n              <Products  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/fabrics\">\n              <Fabrics  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/fournitures\">\n              <Fournitures  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/users\">\n              <Users  displayMode={displayMode} setDisplayMode={setDisplayMode}/>\n            </Route>\n            <Route path=\"/register\">\n              {!loggedIn &&\n                <Register />\n              }\n              {loggedIn &&\n                <About loggedIn={loggedIn} />\n              }\n            </Route>\n            <Route path=\"/users\">\n              <About loggedIn={loggedIn}/>\n            </Route>\n            <Route path=\"/\">\n              <div>location {path}</div>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const messages = {\n    en: {\n      title: 'Lupi',\n      sidebarTitle: 'Pro Sidebar',\n      login: 'Log in to Lupi',\n      emailAddress: 'Email address',\n      password: 'Password',\n      passwordAgain: 'Repeat password',\n      forgottenPassword: 'Forgotten password',\n      createBrand: 'Create brand',\n      createCollection: 'Create collection',\n      createFabric: 'Create fabric',\n      brands: 'Brands',\n      createAccount: 'Create account',\n      firstName: \"First name\",\n      lastName: \"Last name\",\n      cancel: 'Cancel',\n      register: 'Register with Lupi',\n      description:\n        'React sidebar library with dropdown menus and unlimited number of nested submenus',\n      dashboard: 'Dashboard',\n      components: 'Components',\n      dropdown: 'Dropdown',\n      submenu: 'Submenu',\n      multiLevel: 'Multi Level',\n      collapsed: 'Collapsed',\n      rtl: 'RTL',\n      image: 'Background image',\n      new: 'NEW',\n      withPrefix: 'With Prefix',\n      withSuffix: 'With Suffix',\n      logOut: 'Log out',\n      profile: 'Profile',\n      edit: 'Edit',\n      save: 'Save',\n      delete: 'Delete',\n      roundingRules: 'Rounding rules',\n      operatingCurrency: 'Operating currency',\n      clientPaymentConditions: \"Client payment conditions\",\n      postalCode: \"Postal code\",\n      addressLine1: \"Address\",\n      addressLine2: \"Address line 2\",\n      siret: \"Siret\",\n      brandName: \"Brand name\",\n      markup: \"Markup\",\n      deliveryDate: \"Delivery date\",\n      collectionName: \"Collection name\",\n      selectImageBrandWizard: \"You can select an image for your brand (but you don't have to)\",\n      selectNameBrandWizard: \"Select a name for your brand\",\n      fabrics: \"Fabrics\",\n      users: \"Users\",\n      addUser: \"Add user\",\n      collections: \"Collections\",\n      switchBrand: \"Switch brand\"\n    },\n  };\n\n  export default messages;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport messages from './app/messages';\nimport { useIntl } from 'react-intl';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nconst locale='en'\n////\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n<Router>\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </IntlProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  brands: undefined,\n  status: 'idle',\n  error:undefined\n};\n\nconst addImageServer = brand => {\n  var environment = env.getEnvironment(window.location.origin);\n  if (brand.image && typeof(brand.image)==='string' && brand.image.indexOf('http')!==0) {\n    brand.image=environment.imageServer+brand.image;\n  }\n}\n\nexport const saveAsync = createAsyncThunk(\n  'brand/save',\n  async () => {\n    const environment = env.getEnvironment(window.location.origin);\n    let newBrand={id:uuidv4(), operatingCurrency: environment.currency, roundingRules: environment.roundingRules, clientPaymentConditions: environment.clientPaymentConditions, editing:true};\n    return newBrand;\n  }\n);\nexport const createAsync = createAsyncThunk(\n  'brand/create',\n  async (brand) => {\n    console.log('saving brand', brand)\n    if (brand?.editing){\n      delete brand.editing\n    }\n    const result = await postToServer({resource: 'brand', brandId: brand.id, params:brand})\n    return result;\n  }\n);\nexport const loadBrandsAsync = createAsyncThunk(\n  'brand/load',\n  async () => {\n    const result = await getFromServer({resource: 'brand'})\n    console.log('brands result', result)\n    return result;\n  }\n);\n\nexport const brandSlice = createSlice({\n  name: 'brand',\n  initialState:initialState,\n  reducers: {\n    createBrand: (state, action) => {\n      if (!state.brands) {\n        state.brands=[];\n      }\n      const environment = env.getEnvironment(window.location.origin);\n      let newBrand={id:uuidv4(), operatingCurrency: environment.currency, roundingRules: environment.roundingRules, clientPaymentConditions: environment.clientPaymentConditions, editing:true};\n      state.brands.push(newBrand);\n      //state.displayMode='wizard'\n      action.brand=newBrand;\n      state.currentBrand = newBrand\n    },\n    setBrandCurrent: (state, action) => {\n      console.log('testBrand', action.payload)\n      state.currentBrand = action.payload\n      localStorage.setItem('currentBrand', action.payload.id)\n    },\n    cancel: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      if (state.brands) {\n        state.brands=state.brands.filter(function(brand){ \n            return brand.id !== toCancel.payload.id;\n        });\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({resource: 'brand', method:'delete', params:{id: toCancel.payload.id}})\n    },\n    setCurrentBrand: (state, currentBrand) => {\n    console.log('setting ', currentBrand.payload.brand, ' as current brand')\n    if (!state.currentBrand) {\n      state.currentBrand={};\n    }\n    localStorage.setItem('currentBrand', currentBrand.payload.brand)\n    state.currentBrand = currentBrand.payload.brand;\n    },\n    switchBrand:(state, action)=>{\n      console.log('switching brands');\n      localStorage.removeItem('currentBrand');\n      delete state.currentBrand\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveAsync.pending, (state, action) => {\n        console.log(\"saveAsync\", state, action)\n        state.status = {id: action.meta.arg.id, status:'loading'};\n      })\n      .addCase(createAsync.fulfilled, (state, action) => {\n        if (!state.brands) {\n          state.brands=[];\n        }\n        state.brands.push(action.payload)\n        localStorage.setItem('currentBrand', action.payload.id)\n      })\n      .addCase(saveAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          console.log(\"action.payload\",action.payload);\n            delete action.payload.responseCode;\n            addImageServer(action.payload.brand)\n            if (!state.brands) {\n                state.brands=[action.payload.brand]\n            } else {\n              state.brands=state.brands.map(brand=>{\n                if (brand.id===action.payload.brand.id) {//or === action.payload.brand.uuid\n                  return action.payload.brand;\n                }\n                return brand;\n              })\n            }\n        } else {\n          state.error = action.payload.error;\n        }\n      })\n      .addCase(loadBrandsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          console.log(\"loading brands\", action.payload)\n            delete action.payload.responseCode;\n            if (!state.brands) {\n                state.brands=action.payload.brands\n                console.log('state.brands', state.brands)\n            } else {\n              //TODO: add this logic to the other slices to prevent overwriting\n              action.payload.brands.forEach(brand=>{\n                if (!state.brands.find(b=>b.id===brand.id)) {\n                  state.brands.push(brand)\n                }\n              });\n            }\n            //TODO: also add this elsewhere\n            state.brands.forEach(brand=>{\n              addImageServer(brand);\n            })\n        } else {\n          state.error = action.payload;\n        }\n      }).addCase(logout, (state, action) => {\n        console.log('logout deleting currentBrand', state.currentBrand)\n        delete state.currentBrand;\n      })\n  },\n});\n\nexport const { createBrand, cancel, setCurrentBrand, setBrandCurrent, switchBrand } = brandSlice.actions;\nexport default brandSlice.reducer;\n","\n//import { store } from '../app/store';\n\nconst restfulResources = {\n    token: '/token',\n    user: '/user',\n    brand: '/brand',\n    signedurl: '/signedurl',\n    collection: '/collection',\n    product:'/product',\n    fabric: '/fabric',\n    branduser: '/branduser',\n    role: '/role',\n    fourniture: '/fourniture'\n}\nconst env = require('./environment.js');\n\nlet store;\nconst getStore = async () => {\n    if (store) return store;\n    store = import('../app/store')\n        .then(obj => obj)\n        .catch(err => { console.log('error loading store in serverCalls') })\n    return store\n}\n\nconst testAsync = async (questObject) => {\n    console.log(\"testAsyn center\");\n    var environment = env.getEnvironment(window.location.origin);\n    console.log(\"environment should be\", environment.url)\n    //const state=store.getState();\n    //console.log(\"getting store state\",state);\n    let tokens = await new Promise((resolve, reject) => {\n        setTimeout(() => resolve({ accessToken: \"a token\", refreshToken: \"another token\" }), 3000)\n    })\n    console.log(\"testAsyn exist\")\n    return tokens\n}\nconst getTokensFromStorage = () => {\n    var tokens = localStorage.getItem('tokens');\n    if (tokens) {\n        try {\n            return JSON.parse(tokens);\n        } catch (e) { }\n    }\n}\nconst getAccessToken = () => {\n    let tokens = getTokensFromStorage();\n    if (tokens) {\n        return tokens.accessToken;\n    }\n}\nconst putTokensInStorage = async tokens => {\n    localStorage.setItem('tokens', typeof (tokens) === 'object' ? JSON.stringify(tokens) : tokens);\n    //TO BE TESTED\n    var store = await getStore();\n    store.getState().login.tokens = tokens;\n}\n\nconst postToServer = async questObject => {\n    var token = getAccessToken();\n    var environment = env.getEnvironment(window.location.origin);\n    var restfulResource = questObject.resource;\n    var params = questObject.params;\n    var isFormData = false\n    if (typeof (params) === 'object') {\n        for (let _name in params) {\n            let param = params[_name];\n            if (param && param.source) {\n                //We need to upload the file and replace the value with the URL\n                let signedUrlQuestObject = {\n                    resource: 'signedurl',\n                    params: {\n                        fileName: param.name,\n                    }\n                }\n                //slices can optionally put a brandId into the request, and this\n                //will cause the image to be stored in a folder named for the brand id\n                //otherwise the image is stored in a folder named for the user ID.\n                if (questObject.brandId) {\n                    signedUrlQuestObject.params.brandId = questObject.brandId\n                }\n                let signedUrl = await getFromServer(signedUrlQuestObject);\n                //try to upload\n                let uploadParameters = {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': signedUrl.contentType\n                    },\n                    body: param.file\n                };\n                await new Promise((resolve, reject) => {\n                    fetch(signedUrl.url, uploadParameters)\n                        .then(function (response) {\n                            console.log(\"UPLOADBUG sucess\", response.responseCode);\n                            resolve(response.responseCode);\n                        })\n                        .catch(function (err) {\n                            //TODO something with this error.\n                            console.log(\"UPLOADBUG failure\", err);\n                            reject(err);\n                        })\n                })\n                //Now we replace the parameter in the object with URL to the now hosted image\n                params[_name] = signedUrl.key;\n            }\n        }\n        params = JSON.stringify(params)\n    }\n    if (questObject.resource === 'setpw') {\n        token = questObject.params.token\n    }\n    var responseCode = 0;\n    var method = 'POST'\n    if (questObject.update) {\n        method = 'PUT'\n    } else if (questObject.delete) {\n        method = 'DELETE'\n    }\n    var _headers = {}\n    _headers.Authorization = token\n    _headers.Accept = 'application/json, text/plain, */*'\n    if (!isFormData) {\n        _headers['Content-Type'] = 'application/json'\n    }\n    const requestParameters = {\n        method: method,\n        credentials: \"same-origin\",\n        headers: _headers,\n        body: params\n    };\n    console.log(\"postToServer\", environment.url + restfulResources[restfulResource]);\n    let reply = await fetch(environment.url + restfulResources[restfulResource], requestParameters)\n        .then(function (response) {\n            console.log('response.status', response.status)\n            responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        })\n        .catch(function (err) {\n            console.log('postToServer err', err)\n            responseCode = 0\n            return {}\n        })\n    if (responseCode === 401 && reply.code === 'exp' && !questObject.retry) {\n        //the token expired, refresh it and try again\n        await refreshToken();\n        questObject.retry = true;\n        return await postToServer(questObject);\n    }\n    reply.responseCode = responseCode;\n    console.log('server reply', reply)\n    return reply\n}\n\nconst getFromServer = async (questObject) => {\n    console.log('questObject', questObject)\n    var token = getAccessToken();\n    var environment = env.getEnvironment(window.location.origin);\n    var restfulResource = questObject.resource;\n    var params = questObject.params;\n    var responseCode = 0;\n    var _url = environment.url + restfulResources[restfulResource];\n    if (params) {\n        let keys = Object.keys(params)\n        _url += '?'\n        for (var i in keys) {\n            let key = keys[i]\n            let value = params[key]\n            if (Array.isArray(value)) {\n                for (var j in value) {\n                    _url += '&' + key + '=' + value[j]\n                }\n            } else {\n                _url += '&' + key + '=' + value\n            }\n        }\n    }\n    const requestOptons = {\n        method: questObject.method ? questObject.method : \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Authorization': token,\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        }\n    }\n    console.log(\"getFromServer\", _url, requestOptons)\n    let reply = await fetch(_url, requestOptons)\n        .then(function (response) {\n            responseCode = response.status;\n            console.log('getFromServer response', response)\n            return response.json();\n\n        })\n        .then(function (json) {\n            console.log(\"getFromServer then\", json);\n            return json\n        })\n    if (responseCode === 401 && reply.code === 'exp' && !questObject.retry) {\n        console.log(\"getFromServer failed with expired token, retrying\");\n        await refreshToken();\n        questObject.retry = true;\n        return await getFromServer(questObject);\n    } else {\n        reply.responseCode = responseCode;\n        return reply\n    }\n}\n\nasync function refreshToken() {\n    let _refreshToken;\n    var tokens = getTokensFromStorage();\n    if (tokens) {\n        _refreshToken = tokens.refreshToken;\n    }\n    const params = {\n        \"grant_type\": \"refresh\",\n        \"token\": _refreshToken\n    }\n    var questObject = { resource: 'login', params: params };\n    let refresh = await postToServer(questObject);\n    if (refresh.responseCode !== 200 && refresh.responseCode !== 201) {\n        console.log(\"failed to refresh token TODO clear the storage, return to login\");\n    } else {\n        console.log(\"token is refreshed, storing new tokens in local storage\")\n        await putTokensInStorage(refresh);\n    }\n    return refresh;\n\n}\nexport {\n    postToServer,\n    getFromServer,\n    restfulResources,\n    testAsync\n}","import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n};\nexport const globalSlice = createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      console.log(\"GLOBAL LOGOUT CALLED\")\n    }\n  }\n});\nexport const { logout } = globalSlice.actions;\nexport default globalSlice.reducer;\n","\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  collections: {},\n  error:undefined\n};\n\n\nexport const saveCollectionAsync = createAsyncThunk(\n  'collection/save',\n  async collection => {\n    console.log('saveCollectionAsync', collection)\n    const result = await postToServer({resource: 'collection', params:collection})\n    return result;\n  }\n);\nexport const createCollectionAsync = createAsyncThunk(\n  'collection/create',\n  async create => {\n    return {id:uuidv4(), brandId:create.brandId}\n  }\n);\nexport const loadCollectionsAsync = createAsyncThunk(\n  'collection/load',\n  async payload => {\n    //lambda-side, choose whether you're going for a brand Id or acolllectionId call, then if the latter then return\n    //all the collections of the brand of that collection, and apply this everywhere in future\n    //UPDATE: Done for collection and product\n    const result = await getFromServer({resource: 'collection', params:{brandId:payload.brandId, siblingId:payload.collectionId}})\n    console.log(\"COLLECITONS FROM SERVER\", result)\n    result.brandId=payload.brandId;\n    return result;\n  }\n);\n\nexport const collectionSlice = createSlice({\n  name: 'collection',\n  initialState,\n  reducers: {\n    /*createCollection: (state, create) => {\n      console.log(\"CREATE COLLECTION\", create.payload)\n      if (!state.collections) {\n        state.collections={};\n      }\n      if (!state.collections[create.payload.brandId]) {\n        state.collections[create.payload.brandId]=[];\n      }\n      state.collections[create.payload.brandId].push({id:uuidv4(), brandId:create.payload.brandId})\n      console.log(\"CREATE COLLECTION\", create.payload.brandId, state.collections[create.payload.brandId])\n    },*/\n    cancelCreateCollection: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      console.log(\"cancelCreateCollection\", toCancel.payload);\n      console.log(\"cancelCreateCollection\", state.collections[toCancel.payload.collection.brandId]);\n      if (state.collections && state.collections[toCancel.payload.collection.brandId]) {\n        state.collections[toCancel.payload.collection.brandId]=state.collections[toCancel.payload.collection.brandId].filter(function(collection){ \n            return collection.id !== toCancel.payload.collection.id;\n        });\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({resource: 'collection', method:'delete', params:{id: toCancel.payload.collection.id}})\n    }\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveCollectionAsync.pending, (state, action) => {\n        console.log(\"saveCollectionAsync\", state, action)\n        state.status = {id: action.meta.arg.id, status:'loading'};\n      })\n      .addCase(createCollectionAsync.fulfilled, (state, action) => {\n        if (!state.collections) {\n          state.collections={};\n        }\n        if (!state.collections[action.payload.brandId]) {\n          state.collections[action.payload.brandId]=[];\n        }\n        state.collections[action.payload.brandId].push(action.payload)\n      })\n      .addCase(saveCollectionAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          console.log(\"action.payload\",action.payload);\n            delete action.payload.responseCode;\n            if (!state.collections[action.payload.collection.brandId]) {\n                state.collections[action.payload.collection.brandId]=[action.payload.collection]\n            } else {\n                state.collections[action.payload.collection.brandId]=state.collections[action.payload.collection.brandId].map(collection=>{\n                if (collection.id===action.payload.collection.id) {\n                  return action.payload.collection;\n                }\n                return collection;\n              })\n            }\n            console.log(\"so now \",action.payload.collection.brandId, \"is \", state.collections[action.payload.collection.brandId])\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(loadCollectionsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        console.log(\"loading collections\", action.payload)\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n            delete action.payload.responseCode;\n            if (!state.collections || typeof(state?.products)!=Array || state?.products?.length<=0){\n              state.collections=[];\n            }\n            if (!state.collections[action.payload.brandId]){\n              state.collections[action.payload.brandId] = action.payload.collections\n            }\n            else {\n              action.payload.collections.forEach(collection=>{\n                if (!state.collections[action.payload.brandId].find(c=>c.id===collection.id)){\n                  state.collections[action.payload.brandId].push(collection)\n                }\n              })\n            }\n        } else {\n          state.error = action.payload;\n        }\n      }).addCase(logout, (state, action) => {\n        //delete state.collections;\n        state.collections = {};\n      });\n  },\n});\n\nexport const { createCollection, cancelCreateCollection } = collectionSlice.actions;\nexport default collectionSlice.reducer;\n","\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  users: {},\n  error: undefined\n};\n\nexport const saveUserAsync = createAsyncThunk(\n  'user/save',\n  async user => {\n    if (user.editing) {\n      delete user.editing\n    }\n    const result = await postToServer({ resource: 'user', params: user })\n    return result;\n  }\n);\nexport const createUserAsync = createAsyncThunk(\n  'user/create',\n  async create => {\n    return { id: uuidv4(), brandId: create.brandId, editing: true }\n  }\n);\nexport const loadUsersAsync = createAsyncThunk(\n  'user/load',\n  async payload => {\n    const result = await getFromServer({ resource: 'user', params: { brandId: payload.brandId/*, siblingId:payload.productId*/ } })\n    console.log(\"USERS FROM SERVER\", result)\n    result.brandId = payload.brandId;\n    if (result.users) {\n      let tempUsers = []\n      for (var i in result.users) {\n        tempUsers.push(result.users[i].user)\n      }\n      result[payload.brandId] = tempUsers\n    }\n    console.log('LOADED USERS', result)\n    return result;\n  }\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    createUser: (state, create) => {\n      console.log(\"CREATE USER\", create.payload)\n      if (!state.users) {\n        state.users = {};\n      }\n      if (!state.users[create?.payload?.brandId]) {\n        state.users[create?.payload?.brandId] = [];\n      }\n      state.users[create.payload.brandId].push({ id: uuidv4(), brandId: create.payload.brandId, editing: true })\n    },\n    cancelCreateUser: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      if (state.users && state.users[toCancel.payload.user.brandId]) {\n        /*state.users[toCancel.payload.user.brandId]=state.users[toCancel.payload.user.brandId].filter(function(user){ \n          console.log('sliceUser', JSON.parse(JSON.stringify(user)))\n          return user.id !== toCancel.payload.user.id;\n        });*/\n        state.users[toCancel.payload.user.brandId] = state.users[toCancel.payload.user.brandId].filter(user => {\n          return user?.user?.id != toCancel.payload.user.id\n        })\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({ resource: 'user', method: 'delete', params: { id: toCancel.payload.user.id } })\n    },\n    deleteUserRole: (state, toDelete) => {\n      for (var i in state.users[toDelete.payload.currentBrandId]) {\n        if (state.users[toDelete.payload.currentBrandId][i].user.id == toDelete.payload.id) {\n          delete state.users[toDelete.payload.currentBrandId][i]\n        }\n      }\n      getFromServer({ resource: 'role', method: 'delete', params: { userId: toDelete.payload.id, brandId: toDelete.payload.currentBrandId } })\n    }\n\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveUserAsync.pending, (state, action) => {\n        console.log(\"saveUserAsync\", state, action)\n        state.status = { id: action.meta.arg.id, status: 'loading' };\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        if (!state.users) {\n          state.users = {};\n        }\n        if (!state.users[action.payload.brandId]) {\n          state.users[action.payload.brandId] = [];\n        }\n        state.users[action.payload.brandId].push(action.payload)\n      })\n      .addCase(saveUserAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          console.log(\"action.payload\", action.payload);\n          delete action.payload.responseCode;\n          if (!state.users[action.payload.user.brandId]) {\n            state.users[action.payload.user.brandId] = [action.payload.user]\n          } else {\n            state.users[action.payload.user.brandId] = state.users[action.payload.user.brandId].map(user => {\n              if (user.id === action.payload.user.id) {\n                return action.payload.user;\n              }\n              return user;\n            })\n          }\n          console.log(\"so now \", action.payload.user.brandId, \"is \", state.users[action.payload.user.brandId])\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(loadUsersAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        console.log(\"loading users\", action.payload)\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          delete action.payload.responseCode;\n          if (!state.users /*|| typeof(state?.users)!=Array || state?.users?.length<=0*/) {\n            state.users = [];\n          }\n          if (!action.payload[action.payload.brandId]) {\n            console.log('action.payload.users', action.payload.users)\n            state.users[action.payload.brandId] = action.payload.users;\n          } else {\n            if (!state?.users[action.payload.brandId]) {\n              state.users[action.payload.brandId] = []\n            }\n            action.payload.users.forEach(u => {\n              if (!(state.users[action.payload.brandId].find(p => p.id === u.id))) {\n                state.users[action.payload.brandId].push(u)\n              }\n            })\n          }\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(logout, (state, action) => {\n        //delete state.users;\n        state.users = {}\n      });\n  },\n});\n\nexport const { createUser, cancelCreateUser, deleteUserRole } = userSlice.actions;\nexport default userSlice.reducer;\n","module.exports={\n    server:{\n        url: \"https://www-lupi.lupi.studio/v1\",\n        googleLogin: 'https://accounts.google.com/o/oauth2/v2/auth?scope=profile email&access_type=offline&include_granted_scopes=true&state=state_parameter_passthrough_value&redirect_uri=https://api.flashgang.io/v1/googleauth&response_type=code&client_id=979434939914-mmo8birn7i0okdb888crfjej7mpj1q66.apps.googleusercontent.com',\n        imageServer: '',\n        currency: 'EU',\n        roundingRules: '2',\n        clientPaymentConditions: '30'\n    },\n    devServer:{\n        url: \"https://www-lupi.lupi.studio/v1\",\n        googleLogin: 'https://accounts.google.com/o/oauth2/v2/auth?scope=profile email&access_type=offline&include_granted_scopes=true&state=state_parameter_passthrough_value&redirect_uri=https://api-dev.flashgang.io/v1/googleauth&response_type=code&client_id=979434939914-mmo8birn7i0okdb888crfjej7mpj1q66.apps.googleusercontent.com',\n        imageServer: '',\n        currency: 'EU',\n        roundingRules: '2',\n        clientPaymentConditions: '30'\n    },\n    local: {\n        url: \"http://localhost:8080/v1\",\n        googleLogin: 'https://accounts.google.com/o/oauth2/v2/auth?scope=profile email&access_type=offline&include_granted_scopes=true&state=state_parameter_passthrough_value&redirect_uri=http://localhost:8080/googleauth&response_type=code&client_id=979434939914-mmo8birn7i0okdb888crfjej7mpj1q66.apps.googleusercontent.com',\n        imageServer: 'https://www-lupi.lupi.studio/',\n        currency: 'EU',\n        roundingRules: '2',\n        clientPaymentConditions: '30'\n        \n    },\n    getEnvironment: function(url) {\n        //console.log(\"url\", url);\n        if (url.toLowerCase().indexOf('local')>-1 || url.indexOf('127')>-1) {\n        //    console.log(\"url is \", url, \"returning\", this.local);\n            return this.local;\n        } else if (url.toLowerCase().indexOf('dev.flashgang')>-1) {\n        //    console.log(\"url is \", url, \"returning\", this.devServer);\n            return this.devServer;\n        } else {\n        //    console.log(\"url is \", url, \"returning\", this.server);\n            return this.server;\n        }\n    }\n\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer } from './serverCalls';\nimport { saveAsync as saveBrand, loadBrandsAsync, createBrand } from './brandSlice'\nimport { logout } from './globalSlice'\n\nconst initialState = {\n  tokens: undefined,\n  status: 'idle',\n  error:undefined,\n  actionQueue:[]\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const registerAsync = createAsyncThunk(\n  'login/register',\n  async (user) => {\n    console.log(\"login registerAsync user \", user);\n    const response = await postToServer({\n      resource:'user',\n      params:{firstName: user.firstName, lastName: user.lastName, password: user.password, id: user.id}\n    });\n    console.log(\"login registerAsync response\", response);\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\nexport const brandUserAsync = createAsyncThunk(\n  'login/branduser',\n  async (user) => {\n    console.log(\"login brandUserAsync user \", user);\n    const response = await postToServer({\n      resource:'branduser',\n      params:{email: user.email, brand: user.brand}\n    });\n    console.log(\"login brandUserAsync response\", response);\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\nexport const loginAsync = createAsyncThunk(\n  'login/token',\n  async (credentials) => {\n    console.log(\"login loginSync user \", credentials);\n    credentials.grant_type='password';\n    const response = await postToServer({\n      resource:'token',\n      params:credentials\n    });\n    console.log(\"login loginAsync response\", response);\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(brandUserAsync.pending, (state) => {\n        console.log(\"loading brandUser\")\n        state.status = 'loading';\n      })\n      .addCase(brandUserAsync.fulfilled, (state, action) => {\n        console.log(\"done brandUser\")\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          console.log('action.payload', action.payload)\n          let newUser= {id:action.payload.id, password: action.payload.password}\n          state.newUser = newUser;\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(registerAsync.pending, (state) => {\n        console.log(\"loading register\")\n        state.status = 'loading';\n      })\n      .addCase(registerAsync.fulfilled, (state, action) => {\n        console.log(\"done register\", action.payload)\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202) {\n          let tokens= {accessToken:action.payload.access_token, refreshToken: action.payload.refresh_token}\n          tokens.payload=JSON.parse(atob(tokens.accessToken.split('.')[1]));\n          localStorage.setItem('tokens', JSON.stringify(tokens));\n          state.tokens = tokens;\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(loginAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(loginAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          let tokens={accessToken:action.payload.access_token, refreshToken: action.payload.refresh_token};\n          tokens.payload=JSON.parse(atob(tokens.accessToken.split('.')[1]));\n          localStorage.setItem('tokens', JSON.stringify(tokens));\n          state.tokens = tokens;\n        } else {\n          state.error = action.payload;\n        }\n      }).addCase(saveBrand.fulfilled, (state, action) => {\n        if (action.payload.responseCode===401) {\n          delete state.tokens;\n          localStorage.removeItem('tokens');\n        }\n      }).addCase(loadBrandsAsync.fulfilled, (state, action) => {\n        if (action.payload.responseCode===401) {\n          delete state.tokens;\n          localStorage.removeItem('tokens');\n        }\n      }).addCase(logout, (state, action) => {\n        console.log(\"LOGINSLICE LOGOUT CALLED\")\n        localStorage.clear();\n        delete state.tokens;\n      }).addCase(createBrand, (state, action) => {\n        if (action.brand) {\n          let tokens=localStorage.getItem('tokens')\n          if (tokens) {\n            tokens=JSON.parse(tokens);\n            let role={\n              brandId:action.brand.id,\n              name:'ADMIN',\n              allowedScopes:['*:*']\n            }\n            if (!tokens.payload.roles) {\n              tokens.payload.roles=[];\n            }\n            tokens.payload.roles.push(role);\n            localStorage.setItem('tokens', JSON.stringify(tokens));\n            state.tokens = tokens;\n          }\n          \n        }\n      });\n  },\n});\n\n//export const { increment, decrement, incrementByAmount } = loginSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n//So far I can't get this working. If I hard-code the value it works but it otherwise doesn't even log.\n//No real problem, though, because useSelector works nicely.\n/*export const selectTokens = (state) => {\n  console.log(\"selectTokens\", state)\n  if (state && state.login) {\n    return state.login.tokens\n  }\n  return 'nope'\n};*/\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n/*export const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};*/\n\nexport default loginSlice.reducer;\n","\nfunction getScopesForBrand(token, brandId) {\n    let result={\n        allowedScopes:[],\n        disallowedScope:[]\n    }\n    token.roles.forEach(role => {\n        if (role.brandId===brandId) {\n            if (role.allowedScopes) {\n                result.allowedScopes=Object.assign(result.allowedScopes, role.allowedScopes);\n            }\n            if (role.disallowedScope) {\n                result.disallowedScope=Object.assign(result.disallowedScope, role.disallowedScope);\n            }\n        }\n    });\n    return result;\n}\nfunction allowedScope(brandId, scope) {\n    let tokens=localStorage.getItem('tokens');\n    let token;\n    if (tokens) {\n        tokens=JSON.parse(tokens);\n        token=tokens.payload;\n    }\n    let allowed=false;\n    if (!token) {\n        return false;\n    }\n    let scopes=getScopesForBrand(token, brandId);\n    let requestedScopeSplit=scope.split(':');\n    let requestedObject=requestedScopeSplit[0];\n    let requestedAction=requestedScopeSplit[1];\n    scopes.allowedScopes.forEach(scope=>{\n        let thisScopeSplit=scope.split(':');\n        let thisObject=thisScopeSplit[0];\n        let thisAction=thisScopeSplit[1];\n        if (thisObject==='*'|| thisObject===requestedObject) {\n            if (thisAction==='*' || thisAction===requestedAction) {\n                allowed=true;\n            }\n        }\n    })\n    scopes.disallowedScope.forEach(scope=>{\n        let thisScopeSplit=scope.split(':');\n        let thisObject=thisScopeSplit[0];\n        let thisAction=thisScopeSplit[1];\n        if (thisObject==='*'|| thisObject===requestedObject) {\n            if (thisAction==='*' || thisAction===requestedAction) {\n                allowed=false;\n            }\n        }\n    })\n    return allowed;\n}\n\nmodule.exports = {\n    getScopesForBrand,\n    allowedScope\n};","\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  products: {},\n  error:undefined\n};\n\nexport const saveProductAsync = createAsyncThunk(\n  'product/save',\n  async product => {\n    const result = await postToServer({resource: 'product', params:product})\n    return result;\n  }\n);\nexport const createProductAsync = createAsyncThunk(\n  'product/create',\n  async create => {\n    return {id:uuidv4(), collectionId:create.collectionId};\n  }\n);\nexport const loadProductsAsync = createAsyncThunk(\n  'product/load',\n  async payload => {\n    const result = await getFromServer({resource: 'product', params:{collectionId:payload.collectionId, siblingId:payload.productId}})\n    console.log(\"PRODUCTS FROM SERVER\", result)\n    result.collectionId=payload.collectionId;\n    return result;\n  }\n);\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    createProduct: (state, create) => {\n      console.log(\"CREATE PRODUCT\", create.payload)\n      if (!state.products) {\n        state.products={};\n      }\n      if (!state.products[create.payload.collectionId]) {\n        state.products[create.payload.collectionId]=[];\n      }\n      state.products[create.payload.collectionId].push({id:create.payload.id, collectionId:create.payload.collectionId})\n      console.log(\"CREATE PRODUCT\", create.payload.collectionId, state.products[create.payload.collectionId])\n    },\n    cancelCreateProduct: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      console.log(\"cancelCreateProduct\", toCancel.payload);\n      console.log(\"cancelCreateProduct\", state.products[toCancel.payload.product.collectionId]);\n      if (state.products && state.products[toCancel.payload.product.collectionId]) {\n        state.products[toCancel.payload.product.collectionId]=state.products[toCancel.payload.product.collectionId].filter(function(product){ \n            return product.id !== toCancel.payload.product.id;\n        });\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({resource: 'product', method:'delete', params:{id: toCancel.payload.id}})\n    }\n    \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveProductAsync.pending, (state, action) => {\n        console.log(\"saveProductAsync\", state, action)\n        state.status = {id: action.meta.arg.id, status:'loading'};\n      })\n      .addCase(createProductAsync.fulfilled, (state, action) => {\n        if (!state.products) {\n          state.products={};\n        }\n        if (!state.products[action.payload.collectionId]) {\n          state.products[action.payload.collectionId]=[];\n        }\n        void state.products[action.payload.collectionId].push(action.payload)\n      })\n      .addCase(saveProductAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n          console.log(\"action.payload\",action.payload);\n            delete action.payload.responseCode;\n            if (!state.products[action.payload.product.collectionId]) {\n                state.products[action.payload.product.collectionId]=[action.payload.product]\n            } else {\n                state.products[action.payload.product.collectionId]=state.products[action.payload.product.collectionId].map(product=>{\n                if (product.id===action.payload.product.id) {\n                  return action.payload.product;\n                }\n                return product;\n              })\n            }\n            console.log(\"so now \",action.payload.product.collectionId, \"is \", state.products[action.payload.product.collectionId])\n        } else {\n          state.error = action.payload;\n        }\n      })\n      .addCase(loadProductsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        console.log(\"loading products\", action.payload)\n        if (action.payload.responseCode<202 && action.payload.responseCode!==0) {\n            delete action.payload.responseCode;\n            if (!state.products || typeof(state?.products)!=Array || state?.products?.length<=0){\n              state.products=[];\n            }\n            if (!action.payload.products[action.payload.collectionId]){\n              state.products[action.payload.collectionId]=action.payload.products;\n            } else {\n              action.payload.products.forEach(product=>{\n                if(!state.products[action.payload.collectionId].find(p=>p.id===product.id)){\n                  state.products[action.payload.collectionId].push(product)\n                }\n              })\n            }\n        } else {\n          state.error = action.payload;\n        }\n      }).addCase(logout, (state, action) => {\n        state.products = {}\n        //delete state.products;\n      });\n  },\n});\n\nexport const { createProduct, cancelCreateProduct } = productSlice.actions;\nexport default productSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  fabrics: undefined,\n  status: 'idle',\n  error: undefined\n};\n\nconst addImageServer = fabric => {\n  var environment = env.getEnvironment(window.location.origin);\n  if (fabric.image && typeof (fabric.image) === 'string' && fabric.image.indexOf('http') !== 0) {\n    fabric.image = environment.imageServer + fabric.image;\n  }\n}\n\nexport const createFabricAsync = createAsyncThunk(\n  'fabric/create',\n  async (create) => {\n    return { id: uuidv4(), brandId: create.brandId, editing: true }\n  }\n);\nexport const saveAsync = createAsyncThunk(\n  'fabric/save',\n  async (fabric) => {\n    if (fabric?.editing) {\n      delete fabric.editing\n    }\n    const result = await postToServer({ resource: 'fabric', fabricId: fabric.id, params: fabric })\n    return result;\n  }\n);\nexport const loadFabricsAsync = createAsyncThunk(\n  'fabric/load',\n  async (payload) => {\n    const result = await getFromServer({ resource: 'fabric' })\n    console.log('fabrics result', result)\n    result.brandId=payload.brandId\n    return result;\n  }\n);\n\nexport const fabricSlice = createSlice({\n  name: 'fabric',\n  initialState,\n  reducers: {\n    createFabric: (state, action) => {\n      if (!state.fabrics){\n        state.fabrics = {};\n      };\n      if (!state.fabrics[action.payload.brandId]){\n        state.fabrics[action.payload.brandId]=[]\n      }\n      console.log(\"state.fabrics[action.payload.brandId]\", state.fabrics[action.payload.brandId])\n      //void state.fabrics[action.payload.brandId].push({id:uuidv4(), brandId:action.payload.brandId})\n      let newArray = JSON.parse(JSON.stringify(state.fabrics[action.payload.brandId])).concat([{id:uuidv4(), brandId:action.payload.brandId}])\n      console.log('newArray', newArray)\n      state.fabrics[action.payload.brandId] = newArray\n    },\n    cancel: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      if (state.fabrics) {\n        state.fabrics = state.fabrics.filter(function (fabric) {\n          return fabric.id !== toCancel.payload.id;\n        });\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({ resource: 'fabric', method: 'delete', params: { id: toCancel.payload.id } })\n    }\n\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createFabricAsync.pending, (state, action)=>{\n        console.log('createFabricAsync pending')\n      })\n      .addCase(createFabricAsync.fulfilled, (state, action) => {\n        console.log('createFabricAsync 1', action.payload)\n        if (!state.fabrics) {\n          state.fabrics = {};\n        }\n        if (!state.fabrics[action.payload.brandId]) {\n          state.fabrics[action.payload.brandId] = [];\n        }\n        state.fabrics[action.payload.brandId].push(action.payload)\n        /*\n        //state.fabrics[action.payload.brandId] = new Set ([...state.fabrics[action.payload.brandId], action.payload])\n        //state.fabrics[action.payload.brandId] = [...state.fabrics[action.payload.brandId], {id : action.payload.id, brandId: action.payload.brandId}]\n        let newAction = {payload:action.payload}\n        console.log('createFabricAsync 2', newAction.payload)\n        //state.fabrics[action.payload.brandId] = state.fabrics[action.payload.brandId].concat([newAction.payload])\n        let newArray = state.fabrics[action.payload.brandId].concat([newAction.payload])\n        return newArray\n        console.log('createFabricAsync 3', state.fabrics[action.payload.brandId])\n        /*\n        if (!state.fabrics[action.payload.brandId]) {\n          state.fabrics[action.payload.brandId] = [];\n        }\n        state.fabrics[action.payload.brandId].push(action.payload)\n        */\n      })\n      .addCase(saveAsync.pending, (state, action) => {\n        state.status = { id: action.meta.arg.id, status: 'loading' };\n      })\n      .addCase(saveAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          delete action.payload.responseCode;\n          addImageServer(action.payload.fabric)\n          if (!state.fabrics) {\n            state.fabrics = [action.payload.fabrics]\n          } else {\n            state.fabrics = state.fabrics.map(fabric => {\n              if (fabric.id === action.payload.fabric.id) {\n                return action.payload.fabric;\n              }\n              return fabric;\n            })\n          }\n        } else {\n          state.error = action.payload.error;\n        }\n      })\n      .addCase(loadFabricsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          delete action.payload.responseCode;\n          if (!state.fabrics) {\n            state.fabrics = []\n          }\n          if (!state.fabrics[action.payload.brandId]) {\n            state.fabrics[action.payload.brandId] = []\n          }\n          //TODO: add this logic to the other slices to prevent overwriting\n          action.payload.fabrics.forEach(fabric => {\n            if (!state.fabrics[action.payload.brandId].find(f => f.id === fabric.id)) {\n              state.fabrics[action.payload.brandId].push(fabric)\n            }\n          });\n        } else {\n          state.error = action.payload;\n        }\n        //TODO: also add this elsewhere\n        state?.fabrics?.forEach(fabric => {\n          addImageServer(fabric);\n        })\n}).addCase(logout, (state, action) => {\n  delete state.fabrics;\n});\n  },\n});\n\nexport const { createFabric, cancel } = fabricSlice.actions;\nexport default fabricSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { postToServer, getFromServer, testAsync, restfulResources } from './serverCalls';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logout } from './globalSlice';\nconst env = require('./environment.js');\n\nconst initialState = {\n  fournitures: undefined,\n  status: 'idle',\n  error: undefined\n};\n\nconst addImageServer = fourniture => {\n  var environment = env.getEnvironment(window.location.origin);\n  if (fourniture.image && typeof (fourniture.image) === 'string' && fourniture.image.indexOf('http') !== 0) {\n    fourniture.image = environment.imageServer + fourniture.image;\n  }\n}\n\nexport const createFournitureAsync = createAsyncThunk(\n  'fourniture/create',\n  async (create) => {\n    return { id: uuidv4(), brandId: create.brandId, editing: true }\n  }\n);\nexport const saveAsync = createAsyncThunk(\n  'fourniture/save',\n  async (fourniture) => {\n    if (fourniture?.editing) {\n      delete fourniture.editing\n    }\n    const result = await postToServer({ resource: 'fourniture', fournitureId: fourniture.id, params: fourniture })\n    return result;\n  }\n);\nexport const loadFournituresAsync = createAsyncThunk(\n  'fourniture/load',\n  async (payload) => {\n    const result = await getFromServer({ resource: 'fourniture' })\n    console.log('fournitures result', result)\n    result.brandId=payload.brandId\n    return result;\n  }\n);\n\nexport const fournitureSlice = createSlice({\n  name: 'fourniture',\n  initialState,\n  reducers: {\n    createFourniture: (state, action) => {\n      if (!state.fournitures){\n        state.fournitures = {};\n      };\n      if (!state.fournitures[action.payload.brandId]){\n        state.fournitures[action.payload.brandId]=[]\n      }\n      console.log(\"state.fournitures[action.payload.brandId]\", state.fournitures[action.payload.brandId])\n      //void state.fournitures[action.payload.brandId].push({id:uuidv4(), brandId:action.payload.brandId})\n      let newArray = JSON.parse(JSON.stringify(state.fournitures[action.payload.brandId])).concat([{id:uuidv4(), brandId:action.payload.brandId}])\n      console.log('newArray', newArray)\n      state.fournitures[action.payload.brandId] = newArray\n    },\n    cancel: (state, toCancel) => {\n      //TODO make sure this user can perform this action\n      //I think some sort of global thing set server-side would be the right approach\n      if (state.fournitures) {\n        state.fournitures = state.fournitures.filter(function (fourniture) {\n          return fourniture.id !== toCancel.payload.id;\n        });\n      }\n      //fire off a delete but don't wait for it\n      getFromServer({ resource: 'fourniture', method: 'delete', params: { id: toCancel.payload.id } })\n    }\n\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createFournitureAsync.pending, (state, action)=>{\n        console.log('createFournitureAsync pending')\n      })\n      .addCase(createFournitureAsync.fulfilled, (state, action) => {\n        console.log('createFournitureAsync 1', action.payload)\n        if (!state.fournitures) {\n          state.fournitures = {};\n        }\n        if (!state.fournitures[action.payload.brandId]) {\n          state.fournitures[action.payload.brandId] = [];\n        }\n        state.fournitures[action.payload.brandId].push(action.payload)\n        /*\n        //state.fournitures[action.payload.brandId] = new Set ([...state.fournitures[action.payload.brandId], action.payload])\n        //state.fournitures[action.payload.brandId] = [...state.fournitures[action.payload.brandId], {id : action.payload.id, brandId: action.payload.brandId}]\n        let newAction = {payload:action.payload}\n        console.log('createFournitureAsync 2', newAction.payload)\n        //state.fournitures[action.payload.brandId] = state.fournitures[action.payload.brandId].concat([newAction.payload])\n        let newArray = state.fournitures[action.payload.brandId].concat([newAction.payload])\n        return newArray\n        console.log('createFournitureAsync 3', state.fournitures[action.payload.brandId])\n        /*\n        if (!state.fournitures[action.payload.brandId]) {\n          state.fournitures[action.payload.brandId] = [];\n        }\n        state.fournitures[action.payload.brandId].push(action.payload)\n        */\n      })\n      .addCase(saveAsync.pending, (state, action) => {\n        state.status = { id: action.meta.arg.id, status: 'loading' };\n      })\n      .addCase(saveAsync.fulfilled, (state, action) => {\n        if (state.error) delete state.error;\n        state.status = 'idle';\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          delete action.payload.responseCode;\n          addImageServer(action.payload.fourniture)\n          if (!state.fournitures) {\n            state.fournitures = [action.payload.fournitures]\n          } else {\n            state.fournitures = state.fournitures.map(fourniture => {\n              if (fourniture.id === action.payload.fourniture.id) {\n                return action.payload.fourniture;\n              }\n              return fourniture;\n            })\n          }\n        } else {\n          state.error = action.payload.error;\n        }\n      })\n      .addCase(loadFournituresAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        if (action.payload.responseCode < 202 && action.payload.responseCode !== 0) {\n          delete action.payload.responseCode;\n          if (!state.fournitures) {\n            state.fournitures = []\n          }\n          if (!state.fournitures[action.payload.brandId]) {\n            state.fournitures[action.payload.brandId] = []\n          }\n          //TODO: add this logic to the other slices to prevent overwriting\n          action.payload.fournitures?.forEach(fourniture => {\n            if (!state.fournitures[action.payload.brandId].find(f => f.id === fourniture.id)) {\n              state.fournitures[action.payload.brandId].push(fourniture)\n            }\n          });\n        } else {\n          state.error = action.payload;\n        }\n        //TODO: also add this elsewhere\n        state?.fournitures?.forEach(fourniture => {\n          addImageServer(fourniture);\n        })\n}).addCase(logout, (state, action) => {\n  delete state.fournitures;\n});\n  },\n});\n\nexport const { createFourniture, cancel } = fournitureSlice.actions;\nexport default fournitureSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/default-avatar.522560c8.png\";"],"sourceRoot":""}